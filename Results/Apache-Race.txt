------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2073
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2074
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = -1;      /* listener thread doesn't have a thread slot */
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
return *mem;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 38
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, val);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
return (void*) __sync_val_compare_and_swap(mem, cmp, with);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
return (void*) __sync_val_compare_and_swap(mem, cmp, with);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
if (t <= 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 561
^^^^^^^^^^^^^^^^^^^^^^^^
if (!sbh || (sbh->child_num < 0))
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->port = ntohs((*new)->remote_addr->sa.sin.sin_port);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->salen = sa.salen;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------






------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
return *mem;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
return *mem;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1662
^^^^^^^^^^^^^^^^^^^^^^^^
switch (cs->pub.state) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 788
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER_NORMAL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sendrecv.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->options & APR_INCOMPLETE_READ) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 296
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->p->result_set[j] = *fdptr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1658
^^^^^^^^^^^^^^^^^^^^^^^^
event_conn_state_t *cs = (event_conn_state_t *) pt->baton;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 959
^^^^^^^^^^^^^^^^^^^^^^^^
pt->baton = cs;
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 296
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->p->result_set[j] = *fdptr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.client_data = pt;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1662
^^^^^^^^^^^^^^^^^^^^^^^^
switch (cs->pub.state) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1375
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = ap_get_conn_socket(cs->c);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sendrecv.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->options & APR_INCOMPLETE_READ) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1659
^^^^^^^^^^^^^^^^^^^^^^^^
struct timeout_queue *remove_from_q = cs->sc->wc_q;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4942
^^^^^^^^^^^^^^^^^^^^^^^^
{
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4942
^^^^^^^^^^^^^^^^^^^^^^^^
{
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5063
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_core_module_config(net->c->conn_config, csd);
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 296
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->p->result_set[j] = *fdptr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 296
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->p->result_set[j] = *fdptr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc_type = APR_POLL_SOCKET;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1656
^^^^^^^^^^^^^^^^^^^^^^^^
if (pt->type == PT_CSD) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1662
^^^^^^^^^^^^^^^^^^^^^^^^
switch (cs->pub.state) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
return (shutdown(thesocket->socketdes, how) == -1) ? errno : APR_SUCCESS;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->data = data;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->func = func;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
*ref = node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 446
^^^^^^^^^^^^^^^^^^^^^^^^
max_index = allocator->max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 306
^^^^^^^^^^^^^^^^^^^^^^^^
if (index <= allocator->max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 325
^^^^^^^^^^^^^^^^^^^^^^^^
while (*ref == NULL && i < max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
*ref = node->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 383
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index += node->index + 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 448
^^^^^^^^^^^^^^^^^^^^^^^^
current_free_index = allocator->current_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 383
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index += node->index + 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 493
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index = current_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 968
^^^^^^^^^^^^^^^^^^^^^^^^
if (active->next == active) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->mutex = mutex;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 308
^^^^^^^^^^^^^^^^^^^^^^^^
if (allocator->mutex)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
*ref = node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
if (t <= 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 343
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 446
^^^^^^^^^^^^^^^^^^^^^^^^
max_index = allocator->max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 343
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 306
^^^^^^^^^^^^^^^^^^^^^^^^
if (index <= allocator->max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 343
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 343
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 343
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 383
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index += node->index + 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 383
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index += node->index + 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 325
^^^^^^^^^^^^^^^^^^^^^^^^
while (*ref == NULL && i < max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1672
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx = apr_palloc(r->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 465
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 561
^^^^^^^^^^^^^^^^^^^^^^^^
if (!sbh || (sbh->child_num < 0))
------------------------


------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------


------------------------
 httpd-2.4.28/server/scoreboard.c : 418
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->thread_num = thread_num;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
return update_child_status_internal(sbh->child_num, sbh->thread_num,
------------------------


------------------------
 httpd-2.4.28/server/scoreboard.c : 418
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->thread_num = thread_num;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 418
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->thread_num = thread_num;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 959
^^^^^^^^^^^^^^^^^^^^^^^^
pt->baton = cs;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 959
^^^^^^^^^^^^^^^^^^^^^^^^
pt->baton = cs;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 734
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_suspend_connection(cs->c, cs->r);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
cs->suspended = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 863
^^^^^^^^^^^^^^^^^^^^^^^^
if (cs->suspended) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
cs->suspended = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
cs->suspended = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 763
^^^^^^^^^^^^^^^^^^^^^^^^
ap_push_pool(worker_queue_info, cs->p);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
cs->bucket_alloc = apr_bucket_alloc_create(p);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
cs->bucket_alloc = apr_bucket_alloc_create(p);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc_type = APR_POLL_SOCKET;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc_type = APR_POLL_SOCKET;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 956
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.reqevents = APR_POLLIN;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 956
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.reqevents = APR_POLLIN;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 758
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = cs->pfd.desc.s;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.client_data = pt;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.client_data = pt;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 988
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.sense = CONN_SENSE_DEFAULT;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 988
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.sense = CONN_SENSE_DEFAULT;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 472
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 358
^^^^^^^^^^^^^^^^^^^^^^^^
cfg = ap_get_module_config(c->base_server->module_config,
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5014
^^^^^^^^^^^^^^^^^^^^^^^^
c->base_server = server;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5014
^^^^^^^^^^^^^^^^^^^^^^^^
c->base_server = server;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5014
^^^^^^^^^^^^^^^^^^^^^^^^
c->base_server = server;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5004
^^^^^^^^^^^^^^^^^^^^^^^^
apr_sockaddr_ip_get(&c->local_ip, c->local_addr);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 994
^^^^^^^^^^^^^^^^^^^^^^^^
if (!r->useragent_addr || (r->useragent_addr == conn->client_addr)) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 979
^^^^^^^^^^^^^^^^^^^^^^^^
return conn->client_ip;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
if (conn->double_reverse == -1) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->connection->remote_logname != NULL) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5016
^^^^^^^^^^^^^^^^^^^^^^^^
c->id = id;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5016
^^^^^^^^^^^^^^^^^^^^^^^^
c->id = id;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &reqtimeout_module, ccfg);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_pass_brigade(c->output_filters, bb);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
*cp = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 144
^^^^^^^^^^^^^^^^^^^^^^^^
ap_update_child_status_from_conn(c->sbh, SERVER_BUSY_READ, c);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1482
^^^^^^^^^^^^^^^^^^^^^^^^
b2 = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1505
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 586
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_output_filters = 1;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 586
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_output_filters = 1;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 247
^^^^^^^^^^^^^^^^^^^^^^^^
if (async_mpm && !c->clogging_input_filters) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->main || r->connection->keepalive == AP_CONN_CLOSE ||
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 168
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 168
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 168
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
if (APLOGrtrace4(r)) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1673
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->data_sent = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1674
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(r->pool, r->connection->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 3099
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->master && (!c->cs || c->cs == c->master->cs)) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5063
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_core_module_config(net->c->conn_config, csd);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5063
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_core_module_config(net->c->conn_config, csd);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 885
^^^^^^^^^^^^^^^^^^^^^^^^
event_conn_state_t *cs = ap_get_module_config(c->conn_config,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 948
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &mpm_event_module, cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 948
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &mpm_event_module, cs);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 948
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &mpm_event_module, cs);
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (char)(n % 10);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 421
^^^^^^^^^^^^^^^^^^^^^^^^
*start = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1306
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx = apr_pcalloc(r->pool, sizeof(header_filter_ctx));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &reqtimeout_module, ccfg);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 382
^^^^^^^^^^^^^^^^^^^^^^^^
ap_get_module_config(c->conn_config, &reqtimeout_module);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &reqtimeout_module, ccfg);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &reqtimeout_module, ccfg);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 74
^^^^^^^^^^^^^^^^^^^^^^^^
res->nelts = 0;		/* No active elements yet... */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_pcalloc(p, nelts * elt_size);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 74
^^^^^^^^^^^^^^^^^^^^^^^^
res->nelts = 0;		/* No active elements yet... */
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 74
^^^^^^^^^^^^^^^^^^^^^^^^
res->nelts = 0;		/* No active elements yet... */
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_palloc(p, nelts * elt_size);
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_palloc(p, nelts * elt_size);
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 273
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 274
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ',';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 276
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 277
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_mday / 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 278
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_mday % 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 279
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 281
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 282
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 283
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 284
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = real_year / 1000 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 288
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = real_year % 1000 / 100 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 289
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = real_year % 100 / 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 290
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = real_year % 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 291
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 292
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_hour / 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 293
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_hour % 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 294
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ':';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_min / 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 296
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_min % 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ':';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 298
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_sec / 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_sec % 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 300
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 301
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = 'G';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = 'M';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = 'T';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = 0;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 940
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = ": ";
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 941
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(": ") - 1;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 944
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->val);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 946
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = CRLF;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 947
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(CRLF) - 1;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1853
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(r->pool, sizeof(outerror_filter_ctx_t));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 130
^^^^^^^^^^^^^^^^^^^^^^^^
buf[buflen-1] = '\0';
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 130
^^^^^^^^^^^^^^^^^^^^^^^^
buf[buflen-1] = '\0';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 375
^^^^^^^^^^^^^^^^^^^^^^^^
core_output_filter_ctx_t *ctx = net->out_ctx;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
core_ctx_t *ctx = net->in_ctx;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 323
^^^^^^^^^^^^^^^^^^^^^^^^
if (INSERT_BEFORE(f, *outf)) {
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 968
^^^^^^^^^^^^^^^^^^^^^^^^
if (active->next == active) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 98
^^^^^^^^^^^^^^^^^^^^^^^^
core_net_rec *net = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
node = (node_header_t *)memnode->first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 374
^^^^^^^^^^^^^^^^^^^^^^^^
core_net_rec *net = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1840
^^^^^^^^^^^^^^^^^^^^^^^^
for (f = r->output_filters; f != NULL; f = f->next) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 373
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = f->c;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
new_timeout_at = ccfg->timeout_at + len * ccfg->rate_factor;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 79
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->max_timeout_at > 0 && new_timeout_at > ccfg->max_timeout_at) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 253
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 197
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_timeout = 0;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 197
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_timeout = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 197
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_timeout = 0;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->new_max_timeout > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 180
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->in_keep_alive) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = (c->keepalives > 0);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = (c->keepalives > 0);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = (c->keepalives > 0);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_timeout_set(ccfg->socket, saved_sock_timeout);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
new_timeout_at = ccfg->timeout_at + len * ccfg->rate_factor;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->tmpbb)
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 350
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_pass_brigade(f->next, bb);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 553
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.in_func(next, bb, mode, block,
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 178
^^^^^^^^^^^^^^^^^^^^^^^^
reqtimeout_con_cfg *ccfg = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 247
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, AP_MODE_GETLINE, APR_NONBLOCK_READ, remaining);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 124
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS)
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5202
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
node = (node_header_t *)memnode->first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 848
^^^^^^^^^^^^^^^^^^^^^^^^
if (size <= node_free_space(node)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------


------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_tag(ctx->deferred_write_pool, "deferred_write");
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 391
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 816
^^^^^^^^^^^^^^^^^^^^^^^^
*cumulative_bytes_written += bytes_written;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 391
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 391
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(c->pool, sizeof(*ctx));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_kill(b->p, b, brigade_cleanup);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/connection.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------
------------------------
 httpd-2.4.28/server/connection.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
next = node->next;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1106
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
node = (node_header_t *)memnode->first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1106
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
block->first_avail += APR_ALIGN_DEFAULT(sizeof(*list));
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
block->first_avail += APR_ALIGN_DEFAULT(sizeof(*list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
list->pool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
list->pool = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
list->allocator = allocator;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 189
^^^^^^^^^^^^^^^^^^^^^^^^
apr_memnode_t *memnode = apr_allocator_alloc(list->allocator, size);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
list->allocator = allocator;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
list->allocator = allocator;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 165
^^^^^^^^^^^^^^^^^^^^^^^^
if (list->freelist) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 104
^^^^^^^^^^^^^^^^^^^^^^^^
list->blocks = block;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
apr_memnode_t *active = list->blocks;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 104
^^^^^^^^^^^^^^^^^^^^^^^^
list->blocks = block;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 104
^^^^^^^^^^^^^^^^^^^^^^^^
list->blocks = block;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 184
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = SMALL_NODE_SIZE;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 184
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = SMALL_NODE_SIZE;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 184
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = SMALL_NODE_SIZE;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 182
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 182
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 182
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = active;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = active;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 228
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = list->freelist;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 228
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = list->freelist;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 34
^^^^^^^^^^^^^^^^^^^^^^^^
buf = apr_bucket_alloc(*len, a->list); /* XXX: check for failure? */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = node->next;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 228
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = list->freelist;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
h = apr_bucket_alloc(sizeof(*h), b->list);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1029
^^^^^^^^^^^^^^^^^^^^^^^^
*active->ref = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 848
^^^^^^^^^^^^^^^^^^^^^^^^
if (size <= node_free_space(node)) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 864
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail += size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 864
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail += size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = node;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1209
^^^^^^^^^^^^^^^^^^^^^^^^
r->pool            = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1211
^^^^^^^^^^^^^^^^^^^^^^^^
r->server          = conn->base_server;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1024
^^^^^^^^^^^^^^^^^^^^^^^^
r->status_line = ap_get_status_line(r->status);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
r->status = original_status;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1730
^^^^^^^^^^^^^^^^^^^^^^^^
r->bytes_sent += e->length;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
r->clength = clength;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 578
^^^^^^^^^^^^^^^^^^^^^^^^
next->r->eos_sent = 1;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 452
^^^^^^^^^^^^^^^^^^^^^^^^
*p_filt = (*p_filt)->next;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 139
^^^^^^^^^^^^^^^^^^^^^^^^
++arr->nelts;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 585
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 584
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 639
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key = (char *)key;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 640
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->val = (char *)val;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 641
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key_checksum = checksum;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 785
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key = (char *)key;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 786
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->val = (char *)val;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 787
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key_checksum = checksum;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
*ref = node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sendrecv.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
if ((sock->timeout > 0) && (rv < *len)) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1209
^^^^^^^^^^^^^^^^^^^^^^^^
r->pool            = p;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1210
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection      = conn;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1211
^^^^^^^^^^^^^^^^^^^^^^^^
r->server          = conn->base_server;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 757
^^^^^^^^^^^^^^^^^^^^^^^^
r->the_request = apr_pstrcat(r->pool, r->method, *uri ? " " : NULL, uri,
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 903
^^^^^^^^^^^^^^^^^^^^^^^^
r->assbackwards = 0;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 905
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_num = HTTP_VERSION(1, 0);
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 906
^^^^^^^^^^^^^^^^^^^^^^^^
r->protocol  = apr_pstrdup(r->pool, "HTTP/1.0");
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 648
^^^^^^^^^^^^^^^^^^^^^^^^
r->request_time = apr_time_now();
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1024
^^^^^^^^^^^^^^^^^^^^^^^^
r->status_line = ap_get_status_line(r->status);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
r->status = original_status;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 799
^^^^^^^^^^^^^^^^^^^^^^^^
r->method_number = ap_method_number_of(r->method);
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 650
^^^^^^^^^^^^^^^^^^^^^^^^
r->method = r->the_request;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1216
^^^^^^^^^^^^^^^^^^^^^^^^
r->allowed_methods = ap_make_method_list(p, 2);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1522
^^^^^^^^^^^^^^^^^^^^^^^^
r->sent_bodyct = 1;         /* Whatever follows is real body stuff... */
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1450
^^^^^^^^^^^^^^^^^^^^^^^^
r->clength = 0;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1239
^^^^^^^^^^^^^^^^^^^^^^^^
r->read_body       = REQUEST_NO_BODY;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1238
^^^^^^^^^^^^^^^^^^^^^^^^
r->read_length     = 0;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1218
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_in      = apr_table_make(r->pool, 25);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1435
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_out = r->err_headers_out;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1436
^^^^^^^^^^^^^^^^^^^^^^^^
r->err_headers_out = tmp;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1220
^^^^^^^^^^^^^^^^^^^^^^^^
r->subprocess_env  = apr_table_make(r->pool, 25);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1224
^^^^^^^^^^^^^^^^^^^^^^^^
r->notes           = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1449
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_encoding = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1448
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_languages = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1213
^^^^^^^^^^^^^^^^^^^^^^^^
r->user            = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1214
^^^^^^^^^^^^^^^^^^^^^^^^
r->ap_auth_type    = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1247
^^^^^^^^^^^^^^^^^^^^^^^^
r->used_path_info = AP_REQ_DEFAULT_PATH_INFO;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1395
^^^^^^^^^^^^^^^^^^^^^^^^
r->eos_sent = 0;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1234
^^^^^^^^^^^^^^^^^^^^^^^^
r->per_dir_config  = r->server->lookup_defaults;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1226
^^^^^^^^^^^^^^^^^^^^^^^^
r->request_config  = ap_create_request_config(r->pool);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1401
^^^^^^^^^^^^^^^^^^^^^^^^
r->output_filters = r->proto_output_filters;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1232
^^^^^^^^^^^^^^^^^^^^^^^^
r->input_filters   = r->proto_input_filters;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1229
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_output_filters = conn->output_filters;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 766
^^^^^^^^^^^^^^^^^^^^^^^^
uptr->path = apr_pstrmemdup(p, uri, s - uri);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
uptr->is_initialized = 1;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1249
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_addr = conn->client_addr;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1250
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_ip = conn->client_ip;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1219
^^^^^^^^^^^^^^^^^^^^^^^^
r->trailers_in     = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1223
^^^^^^^^^^^^^^^^^^^^^^^^
r->trailers_out    = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1566
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_mask = 0;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1567
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_list = apr_array_make(p, nelts, sizeof(char *));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 74
^^^^^^^^^^^^^^^^^^^^^^^^
res->nelts = 0;		/* No active elements yet... */
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_pcalloc(p, nelts * elt_size);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_palloc(p, nelts * elt_size);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 383
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index += node->index + 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 422
^^^^^^^^^^^^^^^^^^^^^^^^
node->index = index;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_initialized = 0;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 585
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4969
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_core_module_config(r->request_config, req_cfg);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
node->endp = (char *)node + size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 171
^^^^^^^^^^^^^^^^^^^^^^^^
if (endp >= active->endp) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
if (point > a->length) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1860
^^^^^^^^^^^^^^^^^^^^^^^^
if (AP_BUCKET_IS_ERROR(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 491
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BUCKET_IS_METADATA(bucket)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
node->endp = (char *)node + size;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 848
^^^^^^^^^^^^^^^^^^^^^^^^
if (size <= node_free_space(node)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 848
^^^^^^^^^^^^^^^^^^^^^^^^
if (size <= node_free_space(node)) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
new_timeout_at = ccfg->timeout_at + len * ccfg->rate_factor;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 861
^^^^^^^^^^^^^^^^^^^^^^^^
node->free_index = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 875
^^^^^^^^^^^^^^^^^^^^^^^^
if (free_index >= node->free_index)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1106
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 848
^^^^^^^^^^^^^^^^^^^^^^^^
if (size <= node_free_space(node)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 833
^^^^^^^^^^^^^^^^^^^^^^^^
return (memcmp(method, "MKCOL", 5) == 0
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = node;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1196
^^^^^^^^^^^^^^^^^^^^^^^^
log_request_state *state = apr_pcalloc(r->pool, sizeof(log_request_state));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 740
^^^^^^^^^^^^^^^^^^^^^^^^
*cached_time = request_time_cache[i];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
next = node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 861
^^^^^^^^^^^^^^^^^^^^^^^^
node->free_index = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 861
^^^^^^^^^^^^^^^^^^^^^^^^
node->free_index = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 491
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BUCKET_IS_METADATA(bucket)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 34
^^^^^^^^^^^^^^^^^^^^^^^^
buf = apr_bucket_alloc(*len, a->list); /* XXX: check for failure? */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1210
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection      = conn;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 616
^^^^^^^^^^^^^^^^^^^^^^^^
r->the_request = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 905
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_num = HTTP_VERSION(1, 0);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 906
^^^^^^^^^^^^^^^^^^^^^^^^
r->protocol  = apr_pstrdup(r->pool, "HTTP/1.0");
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 621
^^^^^^^^^^^^^^^^^^^^^^^^
r->request_time = apr_time_now();
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1216
^^^^^^^^^^^^^^^^^^^^^^^^
r->allowed_methods = ap_make_method_list(p, 2);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1522
^^^^^^^^^^^^^^^^^^^^^^^^
r->sent_bodyct = 1;         /* Whatever follows is real body stuff... */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1450
^^^^^^^^^^^^^^^^^^^^^^^^
r->clength = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1239
^^^^^^^^^^^^^^^^^^^^^^^^
r->read_body       = REQUEST_NO_BODY;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1238
^^^^^^^^^^^^^^^^^^^^^^^^
r->read_length     = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1218
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_in      = apr_table_make(r->pool, 25);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1435
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_out = r->err_headers_out;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1436
^^^^^^^^^^^^^^^^^^^^^^^^
r->err_headers_out = tmp;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1220
^^^^^^^^^^^^^^^^^^^^^^^^
r->subprocess_env  = apr_table_make(r->pool, 25);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1224
^^^^^^^^^^^^^^^^^^^^^^^^
r->notes           = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1449
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_encoding = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1448
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_languages = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1213
^^^^^^^^^^^^^^^^^^^^^^^^
r->user            = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1214
^^^^^^^^^^^^^^^^^^^^^^^^
r->ap_auth_type    = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1247
^^^^^^^^^^^^^^^^^^^^^^^^
r->used_path_info = AP_REQ_DEFAULT_PATH_INFO;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1395
^^^^^^^^^^^^^^^^^^^^^^^^
r->eos_sent = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1234
^^^^^^^^^^^^^^^^^^^^^^^^
r->per_dir_config  = r->server->lookup_defaults;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1226
^^^^^^^^^^^^^^^^^^^^^^^^
r->request_config  = ap_create_request_config(r->pool);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1401
^^^^^^^^^^^^^^^^^^^^^^^^
r->output_filters = r->proto_output_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1232
^^^^^^^^^^^^^^^^^^^^^^^^
r->input_filters   = r->proto_input_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1229
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_output_filters = conn->output_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1249
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_addr = conn->client_addr;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1250
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_ip = conn->client_ip;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1219
^^^^^^^^^^^^^^^^^^^^^^^^
r->trailers_in     = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1223
^^^^^^^^^^^^^^^^^^^^^^^^
r->trailers_out    = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1566
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_mask = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1567
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_list = apr_array_make(p, nelts, sizeof(char *));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_palloc(p, nelts * elt_size);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_initialized = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4969
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_core_module_config(r->request_config, req_cfg);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1197
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(r->request_config, &log_config_module, state);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 353
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 352
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = fscan->next;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 959
^^^^^^^^^^^^^^^^^^^^^^^^
pt->baton = cs;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 561
^^^^^^^^^^^^^^^^^^^^^^^^
if (!sbh || (sbh->child_num < 0))
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 959
^^^^^^^^^^^^^^^^^^^^^^^^
pt->baton = cs;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 959
^^^^^^^^^^^^^^^^^^^^^^^^
pt->baton = cs;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 734
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_suspend_connection(cs->c, cs->r);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
cs->suspended = 1;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 863
^^^^^^^^^^^^^^^^^^^^^^^^
if (cs->suspended) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
cs->suspended = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 763
^^^^^^^^^^^^^^^^^^^^^^^^
ap_push_pool(worker_queue_info, cs->p);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 863
^^^^^^^^^^^^^^^^^^^^^^^^
if (cs->suspended) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
cs->bucket_alloc = apr_bucket_alloc_create(p);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
cs->suspended = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
cs->bucket_alloc = apr_bucket_alloc_create(p);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 763
^^^^^^^^^^^^^^^^^^^^^^^^
ap_push_pool(worker_queue_info, cs->p);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
cs->bucket_alloc = apr_bucket_alloc_create(p);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc_type = APR_POLL_SOCKET;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 758
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = cs->pfd.desc.s;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc_type = APR_POLL_SOCKET;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.client_data = pt;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 758
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = cs->pfd.desc.s;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.client_data = pt;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 358
^^^^^^^^^^^^^^^^^^^^^^^^
cfg = ap_get_module_config(c->base_server->module_config,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5014
^^^^^^^^^^^^^^^^^^^^^^^^
c->base_server = server;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 358
^^^^^^^^^^^^^^^^^^^^^^^^
cfg = ap_get_module_config(c->base_server->module_config,
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5004
^^^^^^^^^^^^^^^^^^^^^^^^
apr_sockaddr_ip_get(&c->local_ip, c->local_addr);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5014
^^^^^^^^^^^^^^^^^^^^^^^^
c->base_server = server;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5014
^^^^^^^^^^^^^^^^^^^^^^^^
c->base_server = server;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5016
^^^^^^^^^^^^^^^^^^^^^^^^
c->id = id;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &reqtimeout_module, ccfg);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5016
^^^^^^^^^^^^^^^^^^^^^^^^
c->id = id;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_pass_brigade(c->output_filters, bb);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 144
^^^^^^^^^^^^^^^^^^^^^^^^
ap_update_child_status_from_conn(c->sbh, SERVER_BUSY_READ, c);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_pass_brigade(c->output_filters, bb);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1482
^^^^^^^^^^^^^^^^^^^^^^^^
b2 = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 247
^^^^^^^^^^^^^^^^^^^^^^^^
if (async_mpm && !c->clogging_input_filters) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->main || r->connection->keepalive == AP_CONN_CLOSE ||
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 168
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = (c->keepalives > 0);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 586
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_output_filters = 1;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
if (APLOGrtrace4(r)) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4942
^^^^^^^^^^^^^^^^^^^^^^^^
{
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5063
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_core_module_config(net->c->conn_config, csd);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_palloc(p, nelts * elt_size);
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 375
^^^^^^^^^^^^^^^^^^^^^^^^
core_output_filter_ctx_t *ctx = net->out_ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 323
^^^^^^^^^^^^^^^^^^^^^^^^
if (INSERT_BEFORE(f, *outf)) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
core_ctx_t *ctx = net->in_ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 98
^^^^^^^^^^^^^^^^^^^^^^^^
core_net_rec *net = f->ctx;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 323
^^^^^^^^^^^^^^^^^^^^^^^^
if (INSERT_BEFORE(f, *outf)) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 98
^^^^^^^^^^^^^^^^^^^^^^^^
core_net_rec *net = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 374
^^^^^^^^^^^^^^^^^^^^^^^^
core_net_rec *net = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1840
^^^^^^^^^^^^^^^^^^^^^^^^
for (f = r->output_filters; f != NULL; f = f->next) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 374
^^^^^^^^^^^^^^^^^^^^^^^^
core_net_rec *net = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1840
^^^^^^^^^^^^^^^^^^^^^^^^
for (f = r->output_filters; f != NULL; f = f->next) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 373
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = f->c;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
new_timeout_at = ccfg->timeout_at + len * ccfg->rate_factor;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 373
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = f->c;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 79
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->max_timeout_at > 0 && new_timeout_at > ccfg->max_timeout_at) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 253
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 79
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->max_timeout_at > 0 && new_timeout_at > ccfg->max_timeout_at) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->new_max_timeout > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->new_max_timeout > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_timeout_set(ccfg->socket, saved_sock_timeout);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_timeout_set(ccfg->socket, saved_sock_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->tmpbb)
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
new_timeout_at = ccfg->timeout_at + len * ccfg->rate_factor;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->tmpbb)
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 350
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_pass_brigade(f->next, bb);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 350
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_pass_brigade(f->next, bb);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 553
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.in_func(next, bb, mode, block,
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 178
^^^^^^^^^^^^^^^^^^^^^^^^
reqtimeout_con_cfg *ccfg = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 553
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.in_func(next, bb, mode, block,
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 247
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, AP_MODE_GETLINE, APR_NONBLOCK_READ, remaining);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 178
^^^^^^^^^^^^^^^^^^^^^^^^
reqtimeout_con_cfg *ccfg = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 247
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, AP_MODE_GETLINE, APR_NONBLOCK_READ, remaining);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 124
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS)
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5202
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
if (point > a->length) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 39
^^^^^^^^^^^^^^^^^^^^^^^^
a->length  = point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 39
^^^^^^^^^^^^^^^^^^^^^^^^
a->length  = point;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
e->length += nbyte;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
e->length += nbyte;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 719
^^^^^^^^^^^^^^^^^^^^^^^^
(APR_BUCKET_IS_METADATA(bucket) || (bucket->length == 0))) {
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1659
^^^^^^^^^^^^^^^^^^^^^^^^
struct timeout_queue *remove_from_q = cs->sc->wc_q;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 889
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 152
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_HANDLER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1662
^^^^^^^^^^^^^^^^^^^^^^^^
switch (cs->pub.state) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 152
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_HANDLER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.out_func(next, bb);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1249
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_addr = conn->client_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 396
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 397
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->min_rate        = MRT_DEFAULT_HEADER_MIN_RATE;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 93
^^^^^^^^^^^^^^^^^^^^^^^^
*time_left_p = ccfg->timeout_at - now;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->min_rate        = MRT_DEFAULT_HEADER_MIN_RATE;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2566
^^^^^^^^^^^^^^^^^^^^^^^^
c = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 408
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = MRT_DEFAULT_HEADER_MAX_TIMEOUT;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 79
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->max_timeout_at > 0 && new_timeout_at > ccfg->max_timeout_at) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 408
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = MRT_DEFAULT_HEADER_MAX_TIMEOUT;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 253
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 399
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->type = "header";
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 399
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->type = "header";
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 410
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->rate_factor     = default_header_rate_factor;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 349
^^^^^^^^^^^^^^^^^^^^^^^^
while (!INSERT_BEFORE(f, fscan->next))
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 186
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, AP_MODE_SPECULATIVE, block, 1);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 390
^^^^^^^^^^^^^^^^^^^^^^^^
if (ctx == NULL) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 540
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_split_ex(bb, flush_upto,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 888
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = r;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 889
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/connection.c : 76
^^^^^^^^^^^^^^^^^^^^^^^^
bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1249
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_addr = conn->client_addr;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 366
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = ap_get_module_config(c->conn_config, &reqtimeout_module);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b = ap_bucket_eoc_create(c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
list->allocator = allocator;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, list->blocks);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 165
^^^^^^^^^^^^^^^^^^^^^^^^
if (list->freelist) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = node->next;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = node->next;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 968
^^^^^^^^^^^^^^^^^^^^^^^^
if (active->next == active) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1029
^^^^^^^^^^^^^^^^^^^^^^^^
*active->ref = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1088
^^^^^^^^^^^^^^^^^^^^^^^^
node->ref = &node->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 542
^^^^^^^^^^^^^^^^^^^^^^^^
rv = send_brigade_blocking(net->client_socket, bb,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1106
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = &pool->sibling;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 396
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 397
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 373
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = f->c;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 596
^^^^^^^^^^^^^^^^^^^^^^^^
else if (ctx->deferred_write_pool) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 391
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(c->pool, sizeof(*ctx));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = node->next;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = node->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 968
^^^^^^^^^^^^^^^^^^^^^^^^
if (active->next == active) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 553
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.in_func(next, bb, mode, block,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = &pool->sibling;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = &pool->sibling;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 244
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(c->input_filters, bb, mode,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->min_rate        = MRT_DEFAULT_HEADER_MIN_RATE;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 219
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0 && rv == APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 399
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->type = "header";
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 326
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(ctx->b, ctx->tmpbb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_split_ex(ctx->b, e, ctx->tmpbb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_split_ex(ctx->b, e, ctx->tmpbb);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 235
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_bucket_read(e, &str, &len, block);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->type   = &apr_bucket_type_immortal;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 491
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BUCKET_IS_METADATA(bucket)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->type   = &apr_bucket_type_immortal;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
*str = a->data;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 60
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = (char *)buf;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 60
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = (char *)buf;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 816
^^^^^^^^^^^^^^^^^^^^^^^^
*cumulative_bytes_written += bytes_written;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1094
^^^^^^^^^^^^^^^^^^^^^^^^
cs->queue_timestamp = apr_time_now();
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 734
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_suspend_connection(cs->c, cs->r);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1094
^^^^^^^^^^^^^^^^^^^^^^^^
cs->queue_timestamp = apr_time_now();
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 888
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = r;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 889
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 863
^^^^^^^^^^^^^^^^^^^^^^^^
if (cs->suspended) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
cs->suspended = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
next = node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_kill(b->p, b, brigade_cleanup);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1659
^^^^^^^^^^^^^^^^^^^^^^^^
struct timeout_queue *remove_from_q = cs->sc->wc_q;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 914
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(c->base_server->module_config,
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
return *mem;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2015
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[thread_slot] = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 517
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = worker_sockets[i];
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2015
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[thread_slot] = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 519
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[i] = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2013
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[thread_slot] = csd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 517
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = worker_sockets[i];
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2013
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[thread_slot] = csd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 519
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[i] = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
int sd = thesocket->socketdes;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
return (shutdown(thesocket->socketdes, how) == -1) ? errno : APR_SUCCESS;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2541
^^^^^^^^^^^^^^^^^^^^^^^^
c = p->cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1088
^^^^^^^^^^^^^^^^^^^^^^^^
node->ref = &node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1088
^^^^^^^^^^^^^^^^^^^^^^^^
node->ref = &node->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1106
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1106
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
block->first_avail += APR_ALIGN_DEFAULT(sizeof(*list));
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = endp;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
block->first_avail += APR_ALIGN_DEFAULT(sizeof(*list));
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 170
^^^^^^^^^^^^^^^^^^^^^^^^
endp = active->first_avail + SMALL_NODE_SIZE;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 39
^^^^^^^^^^^^^^^^^^^^^^^^
a->length  = point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
e->length += nbyte;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 253
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
h = apr_bucket_alloc(sizeof(*h), b->list);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 816
^^^^^^^^^^^^^^^^^^^^^^^^
*cumulative_bytes_written += bytes_written;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 816
^^^^^^^^^^^^^^^^^^^^^^^^
*cumulative_bytes_written += bytes_written;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_kill(b->p, b, brigade_cleanup);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/connection.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_kill(b->p, b, brigade_cleanup);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/connection.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 777
^^^^^^^^^^^^^^^^^^^^^^^^
switch (method[0])
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 714
^^^^^^^^^^^^^^^^^^^^^^^^
else if (strict && ll[0] && apr_isspace(ll[1])
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 375
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (n % 10);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 373
^^^^^^^^^^^^^^^^^^^^^^^^
*start = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
return (shutdown(thesocket->socketdes, how) == -1) ? errno : APR_SUCCESS;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 864
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail += size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
node = (node_header_t *)memnode->first_avail;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
h = apr_bucket_alloc(sizeof(*h), b->list);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 466
^^^^^^^^^^^^^^^^^^^^^^^^
for (e = APR_BRIGADE_FIRST(bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 491
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BUCKET_IS_METADATA(bucket)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
next = node->next;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 542
^^^^^^^^^^^^^^^^^^^^^^^^
rv = send_brigade_blocking(net->client_socket, bb,
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 124
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS)
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5202
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, e);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_tag(ctx->deferred_write_pool, "deferred_write");
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 391
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 391
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_tag(ctx->deferred_write_pool, "deferred_write");
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->data = data;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/poll/unix/epoll.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
ret = epoll_ctl(pollset->p->epoll_fd, EPOLL_CTL_ADD,
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->type   = &apr_bucket_type_immortal;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 60
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = (char *)buf;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sendrecv.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
rv = read(sock->socketdes, buf, (*len));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 491
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BUCKET_IS_METADATA(bucket)) {
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 734
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_suspend_connection(cs->c, cs->r);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 998
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 491
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BUCKET_IS_METADATA(bucket)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->sbh) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 387
^^^^^^^^^^^^^^^^^^^^^^^^
ap_time_process_request(c->sbh, STOP_PREQUEST);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
*after_point = APR_BRIGADE_FIRST(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 326
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(ctx->b, ctx->tmpbb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2040
^^^^^^^^^^^^^^^^^^^^^^^^
process_socket(thd, cs->p, csd, cs, process_slot, thread_slot);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2032
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[thread_slot] = csd = cs->pfd.desc.s;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 998
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2025
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr((void *)&defer_linger_chain, cs->chain,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2030
^^^^^^^^^^^^^^^^^^^^^^^^
cs->chain = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 76
^^^^^^^^^^^^^^^^^^^^^^^^
bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->sbh) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 412
^^^^^^^^^^^^^^^^^^^^^^^^
ap_time_process_request(r->connection->sbh, START_PREQUEST);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b = ap_bucket_eoc_create(c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.out_func(next, bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5202
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, e);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2025
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr((void *)&defer_linger_chain, cs->chain,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 826
^^^^^^^^^^^^^^^^^^^^^^^^
cs->chain = chain = defer_linger_chain;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2030
^^^^^^^^^^^^^^^^^^^^^^^^
cs->chain = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 826
^^^^^^^^^^^^^^^^^^^^^^^^
cs->chain = chain = defer_linger_chain;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/poll/unix/epoll.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
ret = epoll_ctl(pollset->p->epoll_fd, EPOLL_CTL_DEL,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 998
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1662
^^^^^^^^^^^^^^^^^^^^^^^^
switch (cs->pub.state) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
*ref = node->next;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
block->first_avail += APR_ALIGN_DEFAULT(sizeof(*list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 189
^^^^^^^^^^^^^^^^^^^^^^^^
apr_memnode_t *memnode = apr_allocator_alloc(list->allocator, size);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
list->allocator = allocator;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 165
^^^^^^^^^^^^^^^^^^^^^^^^
if (list->freelist) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
apr_memnode_t *active = list->blocks;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 104
^^^^^^^^^^^^^^^^^^^^^^^^
list->blocks = block;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 184
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = SMALL_NODE_SIZE;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 182
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = active;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
list->freelist = node->next;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 228
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = list->freelist;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
if (point > a->length) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 34
^^^^^^^^^^^^^^^^^^^^^^^^
buf = apr_bucket_alloc(*len, a->list); /* XXX: check for failure? */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
h = apr_bucket_alloc(sizeof(*h), b->list);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (char)(n % 10);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (char)(n % 10);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 422
^^^^^^^^^^^^^^^^^^^^^^^^
node->index = index;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 383
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index += node->index + 1;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 861
^^^^^^^^^^^^^^^^^^^^^^^^
node->free_index = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 848
^^^^^^^^^^^^^^^^^^^^^^^^
if (size <= node_free_space(node)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 427
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail = (char *)node + APR_MEMNODE_T_SIZE;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2578
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2566
^^^^^^^^^^^^^^^^^^^^^^^^
c = p->pre_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2562
^^^^^^^^^^^^^^^^^^^^^^^^
c = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2587
^^^^^^^^^^^^^^^^^^^^^^^^
c = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
if (t <= 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 508
^^^^^^^^^^^^^^^^^^^^^^^^
*thesock = sock->socketdes;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->port = ntohs((*new)->remote_addr->sa.sin.sin_port);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 93
^^^^^^^^^^^^^^^^^^^^^^^^
*time_left_p = ccfg->timeout_at - now;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 93
^^^^^^^^^^^^^^^^^^^^^^^^
*time_left_p = ccfg->timeout_at - now;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1860
^^^^^^^^^^^^^^^^^^^^^^^^
if (AP_BUCKET_IS_ERROR(e)) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1218
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_in      = apr_table_make(r->pool, 25);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 467
^^^^^^^^^^^^^^^^^^^^^^^^
t->a.nelts = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 341
^^^^^^^^^^^^^^^^^^^^^^^^
while (*ref == NULL && max_index > 0);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 253
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->min_rate        = MRT_DEFAULT_HEADER_MIN_RATE;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->min_rate        = MRT_DEFAULT_HEADER_MIN_RATE;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 410
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->rate_factor     = default_header_rate_factor;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
new_timeout_at = ccfg->timeout_at + len * ccfg->rate_factor;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 596
^^^^^^^^^^^^^^^^^^^^^^^^
else if (ctx->deferred_write_pool) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 816
^^^^^^^^^^^^^^^^^^^^^^^^
*cumulative_bytes_written += bytes_written;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 816
^^^^^^^^^^^^^^^^^^^^^^^^
*cumulative_bytes_written += bytes_written;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = &pool->sibling;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/connection.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 757
^^^^^^^^^^^^^^^^^^^^^^^^
r->the_request = apr_pstrcat(r->pool, r->method, *uri ? " " : NULL, uri,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 903
^^^^^^^^^^^^^^^^^^^^^^^^
r->assbackwards = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 648
^^^^^^^^^^^^^^^^^^^^^^^^
r->request_time = apr_time_now();
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 799
^^^^^^^^^^^^^^^^^^^^^^^^
r->method_number = ap_method_number_of(r->method);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 650
^^^^^^^^^^^^^^^^^^^^^^^^
r->method = r->the_request;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 766
^^^^^^^^^^^^^^^^^^^^^^^^
uptr->path = apr_pstrmemdup(p, uri, s - uri);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
uptr->is_initialized = 1;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 34
^^^^^^^^^^^^^^^^^^^^^^^^
buf = apr_bucket_alloc(*len, a->list); /* XXX: check for failure? */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->data = data;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->main || r->connection->keepalive == AP_CONN_CLOSE ||
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 93
^^^^^^^^^^^^^^^^^^^^^^^^
*time_left_p = ccfg->timeout_at - now;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
if (t <= 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 1174
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->connection->vhost_lookup_data) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1088
^^^^^^^^^^^^^^^^^^^^^^^^
node->ref = &node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 866
^^^^^^^^^^^^^^^^^^^^^^^^
list_insert(node, active);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
h = apr_bucket_alloc(sizeof(*h), b->list);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 758
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = cs->pfd.desc.s;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 354
^^^^^^^^^^^^^^^^^^^^^^^^
bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 358
^^^^^^^^^^^^^^^^^^^^^^^^
ap_pass_brigade(c->output_filters, bb);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 387
^^^^^^^^^^^^^^^^^^^^^^^^
ap_time_process_request(c->sbh, STOP_PREQUEST);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 355
^^^^^^^^^^^^^^^^^^^^^^^^
b = ap_bucket_eor_create(c->bucket_alloc, r);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 382
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->cs)
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1482
^^^^^^^^^^^^^^^^^^^^^^^^
b2 = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
rv = send_brigade_nonblocking(net->client_socket, bb,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1036
^^^^^^^^^^^^^^^^^^^^^^^^
rv = output_filter->frec->filter_func.out_func(output_filter, NULL);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1033
^^^^^^^^^^^^^^^^^^^^^^^^
while (output_filter->next != NULL) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.out_func(next, bb);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 391
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(c->pool, sizeof(*ctx));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2518
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_kill(b->p, b, brigade_cleanup);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_bucket_read(e, str, len, block);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 38
^^^^^^^^^^^^^^^^^^^^^^^^
*length = b->length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
ok = apr_mmap_offset(&addr, m->mmap, b->start);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
if (!m->mmap) {
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 77
^^^^^^^^^^^^^^^^^^^^^^^^
m = apr_bucket_alloc(sizeof(*m), b->list);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 219
^^^^^^^^^^^^^^^^^^^^^^^^
apr_file_t *f = a->fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
m->mmap = mm;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
apr_mmap_delete(m->mmap);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
m->mmap = mm;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 146
^^^^^^^^^^^^^^^^^^^^^^^^
int elt_size = dst->elt_size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = arr->nelts;	/* Force overflow on push */
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = arr->nelts;	/* Force overflow on push */
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2389
^^^^^^^^^^^^^^^^^^^^^^^^
b = b->parent;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 589
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_create(&ctx->deferred_write_pool, c->pool);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
if (frec->ftype < AP_FTYPE_CONNECTION && (*r_filters == *c_filters)) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 220
^^^^^^^^^^^^^^^^^^^^^^^^
int left = r->server->keep_alive_max - r->connection->keepalives;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 586
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_output_filters = 1;
------------------------


------------------------
 httpd-2.4.28/server/config.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
if (filters->frec->filter_init_func && filters->r == r) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
f = f->next;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/config.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
if (filters->frec->filter_init_func && filters->r == r) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------
------------------------
 httpd-2.4.28/server/config.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
if (filters->frec->filter_init_func && filters->r == r) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 675
^^^^^^^^^^^^^^^^^^^^^^^^
r->proxyreq = rr->proxyreq;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 678
^^^^^^^^^^^^^^^^^^^^^^^^
r->mtime = rr->mtime;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 692
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_out = apr_table_overlay(r->pool, rr->headers_out,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 694
^^^^^^^^^^^^^^^^^^^^^^^^
r->err_headers_out = apr_table_overlay(r->pool, rr->err_headers_out,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 698
^^^^^^^^^^^^^^^^^^^^^^^^
r->subprocess_env = apr_table_overlay(r->pool, rr->subprocess_env,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 691
^^^^^^^^^^^^^^^^^^^^^^^^
r->notes = apr_table_overlay(r->pool, rr->notes, r->notes);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/mappers/mod_dir.c : 234
^^^^^^^^^^^^^^^^^^^^^^^^
r->handler = DIR_MAGIC_TYPE;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 687
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_encoding = rr->content_encoding;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 688
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_languages = rr->content_languages;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 679
^^^^^^^^^^^^^^^^^^^^^^^^
r->uri = rr->uri;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filepath.c : 288
^^^^^^^^^^^^^^^^^^^^^^^^
*newpath = path;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 681
^^^^^^^^^^^^^^^^^^^^^^^^
r->canonical_filename = rr->canonical_filename;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filepath.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
++(*inpath);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 683
^^^^^^^^^^^^^^^^^^^^^^^^
r->args = rr->args;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 689
^^^^^^^^^^^^^^^^^^^^^^^^
r->per_dir_config = rr->per_dir_config;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 701
^^^^^^^^^^^^^^^^^^^^^^^^
r->output_filters = rr->output_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 702
^^^^^^^^^^^^^^^^^^^^^^^^
r->input_filters = rr->input_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 676
^^^^^^^^^^^^^^^^^^^^^^^^
r->no_cache = (r->no_cache && rr->no_cache);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 677
^^^^^^^^^^^^^^^^^^^^^^^^
r->no_local_copy = (r->no_local_copy && rr->no_local_copy);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->pool = pool;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->valid |= APR_FINFO_CSIZE;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->protection = apr_unix_mode2perms(info->st_mode);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 76
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->filetype = filetype_from_mode(info->st_mode);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 77
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->user = info->st_uid;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->group = info->st_gid;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 87
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->inode = info->st_ino;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->device = info->st_dev;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->nlink = info->st_nlink;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 79
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->size = info->st_size;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->csize = (apr_off_t)info->st_blocks * (apr_off_t)DEV_BSIZE;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/time/unix/time.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
*result = (apr_time_t)input * APR_USEC_PER_SEC;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filestat.c : 298
^^^^^^^^^^^^^^^^^^^^^^^^
finfo->fname = fname;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 684
^^^^^^^^^^^^^^^^^^^^^^^^
r->finfo = rr->finfo;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 696
^^^^^^^^^^^^^^^^^^^^^^^^
r->trailers_out = apr_table_overlay(r->pool, rr->trailers_out,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 835
^^^^^^^^^^^^^^^^^^^^^^^^
r->allowed_methods->method_mask |= mask;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 670
^^^^^^^^^^^^^^^^^^^^^^^^
t->a.nelts--;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 522
^^^^^^^^^^^^^^^^^^^^^^^^
name[w] = '\0';
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 361
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx = apr_pcalloc(f->r->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filepath.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
path[keptlen++] = '/';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filepath.c : 270
^^^^^^^^^^^^^^^^^^^^^^^^
path[pathlen] = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/filepath.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
path[0] = '/';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1105
^^^^^^^^^^^^^^^^^^^^^^^^
*delim = '/';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1364
^^^^^^^^^^^^^^^^^^^^^^^^
cache->cached = r->filename;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1376
^^^^^^^^^^^^^^^^^^^^^^^^
cache->dir_conf_tested = sec_ent;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1377
^^^^^^^^^^^^^^^^^^^^^^^^
cache->dir_conf_merged = r->per_dir_config;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1387
^^^^^^^^^^^^^^^^^^^^^^^^
cache->per_dir_result = r->per_dir_config;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 437
^^^^^^^^^^^^^^^^^^^^^^^^
cache->walked = apr_array_make(r->pool, 4, sizeof(walk_walked_t));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 436
^^^^^^^^^^^^^^^^^^^^^^^^
cache = apr_pcalloc(r->pool, sizeof(*cache));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 122
^^^^^^^^^^^^^^^^^^^^^^^^
++arr->nelts;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1005
^^^^^^^^^^^^^^^^^^^^^^^^
last_walk->matched = sec_ent[sec_idx];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1006
^^^^^^^^^^^^^^^^^^^^^^^^
last_walk->merged = now_merged;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 936
^^^^^^^^^^^^^^^^^^^^^^^^
r->filename[filename_len++] = '/';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
r->filename[filename_len] = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/config.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
conf_vector[i] = (*df)(p, base_vector[i], new_vector[i]);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/config.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
conf_vector[i] = base_vector[i];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 210
^^^^^^^^^^^^^^^^^^^^^^^^
conf->d = new->d;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 212
^^^^^^^^^^^^^^^^^^^^^^^^
conf->d_components = new->d_components;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 240
^^^^^^^^^^^^^^^^^^^^^^^^
conf->opts = new->opts;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 241
^^^^^^^^^^^^^^^^^^^^^^^^
conf->opts_add = new->opts_add;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 242
^^^^^^^^^^^^^^^^^^^^^^^^
conf->opts_remove = new->opts_remove;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 246
^^^^^^^^^^^^^^^^^^^^^^^^
conf->override = new->override;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 211
^^^^^^^^^^^^^^^^^^^^^^^^
conf->d_is_fnmatch = new->d_is_fnmatch;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 313
^^^^^^^^^^^^^^^^^^^^^^^^
conf->sec_file = new->sec_file;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
conf->sec_if = new->sec_if;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
conf->r = new->r;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 382
^^^^^^^^^^^^^^^^^^^^^^^^
conf->etag_bits &= (~ ETAG_NONE);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
conf->etag_add =
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 370
^^^^^^^^^^^^^^^^^^^^^^^^
conf->etag_remove =
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 394
^^^^^^^^^^^^^^^^^^^^^^^^
conf->decode_encoded_slashes = new->decode_encoded_slashes;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 215
^^^^^^^^^^^^^^^^^^^^^^^^
conf->condition = new->condition;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 406
^^^^^^^^^^^^^^^^^^^^^^^^
conf->max_ranges = new->max_ranges != AP_MAXRANGES_UNSET ? new->max_ranges : base->max_ranges;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 407
^^^^^^^^^^^^^^^^^^^^^^^^
conf->max_overlaps = new->max_overlaps != AP_MAXRANGES_UNSET ? new->max_overlaps : base->max_overlaps;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 408
^^^^^^^^^^^^^^^^^^^^^^^^
conf->max_reversals = new->max_reversals != AP_MAXRANGES_UNSET ? new->max_reversals : base->max_reversals;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 214
^^^^^^^^^^^^^^^^^^^^^^^^
conf->refs = new->refs;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 258
^^^^^^^^^^^^^^^^^^^^^^^^
conf->response_code_exprs = new->response_code_exprs;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 421
^^^^^^^^^^^^^^^^^^^^^^^^
AP_CORE_MERGE_FLAG(qualify_redirect_url, conf, base, new);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/aaa/mod_authz_core.c : 164
^^^^^^^^^^^^^^^^^^^^^^^^
conf->authz_forbidden_on_fail = base->authz_forbidden_on_fail;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1672
^^^^^^^^^^^^^^^^^^^^^^^^
cache->cached = test_file;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1775
^^^^^^^^^^^^^^^^^^^^^^^^
cache->dir_conf_tested = sec_ent;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1776
^^^^^^^^^^^^^^^^^^^^^^^^
cache->dir_conf_merged = r->per_dir_config;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/request.c : 1786
^^^^^^^^^^^^^^^^^^^^^^^^
cache->per_dir_result = r->per_dir_config;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
res->nelts = arr->nelts;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = arr->nelts;	/* Force overflow on push */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 460
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = i;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 457
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = i;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1860
^^^^^^^^^^^^^^^^^^^^^^^^
if (AP_BUCKET_IS_ERROR(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
if (bucket->length == (apr_size_t)-1) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 217
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_file *a = data->data;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_initialized = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 231
^^^^^^^^^^^^^^^^^^^^^^^^
a->fd = fd;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 231
^^^^^^^^^^^^^^^^^^^^^^^^
a->fd = fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
a->readpool = reqpool;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (!apr_pool_is_ancestor(a->readpool, reqpool)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
a->readpool = reqpool;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 448
^^^^^^^^^^^^^^^^^^^^^^^^
buf = h->base + e->start + e->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 1174
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->connection->vhost_lookup_data) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4993
^^^^^^^^^^^^^^^^^^^^^^^^
c->notes = apr_table_make(ptrans, 5);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1229
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_output_filters = conn->output_filters;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 412
^^^^^^^^^^^^^^^^^^^^^^^^
ap_time_process_request(r->connection->sbh, START_PREQUEST);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 148
^^^^^^^^^^^^^^^^^^^^^^^^
c->keepalive = AP_CONN_UNKNOWN;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 415
^^^^^^^^^^^^^^^^^^^^^^^^
if (APLOGrtrace4(r)) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 123
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_run_insert_network_bucket(f->c, ctx->b, net->client_socket);
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 323
^^^^^^^^^^^^^^^^^^^^^^^^
if (INSERT_BEFORE(f, *outf)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 766
^^^^^^^^^^^^^^^^^^^^^^^^
r->assbackwards = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 767
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_num = HTTP_VERSION(r->protocol[5] - '0', r->protocol[7] - '0');
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 722
^^^^^^^^^^^^^^^^^^^^^^^^
for (r->protocol = ll; apr_isspace(*r->protocol); ++r->protocol)
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1241
^^^^^^^^^^^^^^^^^^^^^^^^
r->status          = HTTP_OK;  /* Until further notice */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1236
^^^^^^^^^^^^^^^^^^^^^^^^
r->sent_bodyct     = 0;                      /* bytect isn't for body */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1221
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_out     = apr_table_make(r->pool, 12);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1222
^^^^^^^^^^^^^^^^^^^^^^^^
r->err_headers_out = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1367
^^^^^^^^^^^^^^^^^^^^^^^^
r->per_dir_config = r->server->lookup_defaults;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1230
^^^^^^^^^^^^^^^^^^^^^^^^
r->output_filters  = r->proto_output_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
elts->key = (char *)key;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 839
^^^^^^^^^^^^^^^^^^^^^^^^
elts->val = (char *)val;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 840
^^^^^^^^^^^^^^^^^^^^^^^^
elts->key_checksum = checksum;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/metadata/mod_setenvif.c : 503
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(r->request_config, &setenvif_module,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 694
^^^^^^^^^^^^^^^^^^^^^^^^
*ll = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 725
^^^^^^^^^^^^^^^^^^^^^^^^
*ll = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 751
^^^^^^^^^^^^^^^^^^^^^^^^
*((char *)r->protocol + len) = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
res[n] = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
*value++ = '\0'; /* NUL-terminate last_field name at ':' */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 344
^^^^^^^^^^^^^^^^^^^^^^^^
*last_char = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1124
^^^^^^^^^^^^^^^^^^^^^^^^
*sort_next++ = table_next++;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start++];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1068
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start++];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1056
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 51
^^^^^^^^^^^^^^^^^^^^^^^^
new_mutex->pool = pool;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 50
^^^^^^^^^^^^^^^^^^^^^^^^
new_mutex = apr_pcalloc(pool, sizeof(apr_thread_mutex_t));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->func = func;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->salen = sa.salen;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 390
^^^^^^^^^^^^^^^^^^^^^^^^
if (ctx == NULL) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 400
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->buffered_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 540
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_split_ex(bb, flush_upto,
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 448
^^^^^^^^^^^^^^^^^^^^^^^^
current_free_index = allocator->current_free_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 493
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index = current_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 493
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index = current_free_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 493
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index = current_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->mutex = mutex;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (allocator->mutex)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2130
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2073
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2073
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2074
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = -1;      /* listener thread doesn't have a thread slot */
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2074
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = -1;      /* listener thread doesn't have a thread slot */
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
if (t <= 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
int sd = thesocket->socketdes;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = -1;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 93
^^^^^^^^^^^^^^^^^^^^^^^^
*time_left_p = ccfg->timeout_at - now;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 739
^^^^^^^^^^^^^^^^^^^^^^^^
else if (*dst == '/' || *dst == '\\') {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 739
^^^^^^^^^^^^^^^^^^^^^^^^
else if (*dst == '/' || *dst == '\\') {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 168
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 456
^^^^^^^^^^^^^^^^^^^^^^^^
hash = TABLE_HASH(next_elt->key);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 178
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->idlers < zero_pt) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 341
^^^^^^^^^^^^^^^^^^^^^^^^
while (*ref == NULL && max_index > 0);
------------------------


------------------------
 httpd-2.4.28/server/util.c : 2141
^^^^^^^^^^^^^^^^^^^^^^^^
*d = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2141
^^^^^^^^^^^^^^^^^^^^^^^^
*d = '\0';
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 375
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (n % 10);
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 375
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (n % 10);
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 373
^^^^^^^^^^^^^^^^^^^^^^^^
*start = 0;
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 373
^^^^^^^^^^^^^^^^^^^^^^^^
*start = 0;
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (char)(n % 10);
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (char)(n % 10);
------------------------


------------------------
 apr-1.6.3/strings/apr_strings.c : 421
^^^^^^^^^^^^^^^^^^^^^^^^
*start = 0;
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 421
^^^^^^^^^^^^^^^^^^^^^^^^
*start = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->port = ntohs((*new)->remote_addr->sa.sin.sin_port);
------------------------
------------------------
 httpd-2.4.28/server/log.c : 999
^^^^^^^^^^^^^^^^^^^^^^^^
len += apr_snprintf(buf + len, buflen - len,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
return (shutdown(thesocket->socketdes, how) == -1) ? errno : APR_SUCCESS;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 528
^^^^^^^^^^^^^^^^^^^^^^^^
queue->terminated = 1;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 123
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_run_insert_network_bucket(f->c, ctx->b, net->client_socket);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 349
^^^^^^^^^^^^^^^^^^^^^^^^
while (!INSERT_BEFORE(f, fscan->next))
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
cs->bucket_alloc = apr_bucket_alloc_create(p);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1229
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_output_filters = conn->output_filters;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 415
^^^^^^^^^^^^^^^^^^^^^^^^
if (APLOGrtrace4(r)) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 460
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 589
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_create(&ctx->deferred_write_pool, c->pool);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
if (frec->ftype < AP_FTYPE_CONNECTION && (*r_filters == *c_filters)) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 280
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_KEEPALIVE;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
&& e->length != (apr_size_t)-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 217
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_file *a = data->data;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 182
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
f = apr_bucket_alloc(sizeof(*f), b->list);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 httpd-2.4.28/server/config.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
if (filters->frec->filter_init_func && filters->r == r) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
f = f->next;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
e->length += nbyte;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 235
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_bucket_read(e, &str, &len, block);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->type   = &apr_bucket_type_immortal;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->type   = &apr_bucket_type_immortal;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
*str = a->data;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 60
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = (char *)buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 60
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = (char *)buf;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1036
^^^^^^^^^^^^^^^^^^^^^^^^
rv = output_filter->frec->filter_func.out_func(output_filter, NULL);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1033
^^^^^^^^^^^^^^^^^^^^^^^^
while (output_filter->next != NULL) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 253
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1094
^^^^^^^^^^^^^^^^^^^^^^^^
cs->queue_timestamp = apr_time_now();
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
apr_mmap_delete(m->mmap);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
m->mmap = mm;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
m->mmap = mm;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 219
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0 && rv == APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
if (!ccfg->socket) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 197
^^^^^^^^^^^^^^^^^^^^^^^^
for (bkt = APR_BRIGADE_FIRST(bb);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.out_func(next, bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_bucket_read(e, str, len, block);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 38
^^^^^^^^^^^^^^^^^^^^^^^^
*length = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
ok = apr_mmap_offset(&addr, m->mmap, b->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 422
^^^^^^^^^^^^^^^^^^^^^^^^
node->index = index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 455
^^^^^^^^^^^^^^^^^^^^^^^^
index = node->index;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
if (!m->mmap) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, mode, block, readbytes);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 77
^^^^^^^^^^^^^^^^^^^^^^^^
m = apr_bucket_alloc(sizeof(*m), b->list);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 354
^^^^^^^^^^^^^^^^^^^^^^^^
bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 313
^^^^^^^^^^^^^^^^^^^^^^^^
for (e = APR_BRIGADE_FIRST(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 326
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(ctx->b, ctx->tmpbb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_split_ex(ctx->b, e, ctx->tmpbb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_split_ex(ctx->b, e, ctx->tmpbb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
*after_point = APR_BRIGADE_FIRST(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 326
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(ctx->b, ctx->tmpbb);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 358
^^^^^^^^^^^^^^^^^^^^^^^^
ap_pass_brigade(c->output_filters, bb);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2523
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2587
^^^^^^^^^^^^^^^^^^^^^^^^
c = c->next;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 496
^^^^^^^^^^^^^^^^^^^^^^^^
e = apr_bucket_eos_create(f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 382
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->cs)
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5019
^^^^^^^^^^^^^^^^^^^^^^^^
c->clogging_input_filters = 0;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->main || r->connection->keepalive == AP_CONN_CLOSE ||
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 392
^^^^^^^^^^^^^^^^^^^^^^^^
net->out_ctx = (core_output_filter_ctx_t *)ctx;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
rv = send_brigade_nonblocking(net->client_socket, bb,
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 596
^^^^^^^^^^^^^^^^^^^^^^^^
else if (ctx->deferred_write_pool) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1100
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_APPEND(cs->sc->ka_q, cs);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
ret = epoll_ctl(pollset->p->epoll_fd, EPOLL_CTL_ADD,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_INSERT_TAIL(&q->head, el, event_conn_state_t, timeout_list);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_INSERT_TAIL(&q->head, el, event_conn_state_t, timeout_list);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_INSERT_TAIL(&q->head, el, event_conn_state_t, timeout_list);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 296
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->p->result_set[j] = *fdptr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 308
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_REMOVE(el, timeout_list);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 308
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_REMOVE(el, timeout_list);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->port = ntohs((*new)->remote_addr->sa.sin.sin_port);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
if (point > a->length) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------


------------------------
 apr-1.6.3/strings/apr_fnmatch.c : 210
^^^^^^^^^^^^^^^^^^^^^^^^
if (*pattern == '*')
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = arr->nelts;	/* Force overflow on push */
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 452
^^^^^^^^^^^^^^^^^^^^^^^^
apr_table_entry_t *next_elt = (apr_table_entry_t *) t->a.elts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 460
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = i;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 161
^^^^^^^^^^^^^^^^^^^^^^^^
f->fd = fd;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 161
^^^^^^^^^^^^^^^^^^^^^^^^
f->fd = fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
f->readpool = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
f->readpool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 164
^^^^^^^^^^^^^^^^^^^^^^^^
f->can_mmap = 1;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
f->read_size = APR_BUCKET_BUFF_SIZE;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
new_data = apr_palloc(arr->pool, arr->elt_size * new_size);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 134
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new_data, arr->elts, arr->nalloc * arr->elt_size);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 448
^^^^^^^^^^^^^^^^^^^^^^^^
buf = h->base + e->start + e->length;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
apr_mmap_delete(m->mmap);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 78
^^^^^^^^^^^^^^^^^^^^^^^^
m->mmap = mm;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 27
^^^^^^^^^^^^^^^^^^^^^^^^
*len = b->length;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 26
^^^^^^^^^^^^^^^^^^^^^^^^
*str = h->base + b->start;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
h = apr_bucket_alloc(sizeof(*h), b->list);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-1.6.3/mmap/unix/mmap.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->mm = mm;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 488
^^^^^^^^^^^^^^^^^^^^^^^^
end_elt = ((apr_table_entry_t *) t->a.elts) + t->index_last[hash];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1868
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1016
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = pool->ref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1016
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = pool->ref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = &pool->sibling;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 816
^^^^^^^^^^^^^^^^^^^^^^^^
*cumulative_bytes_written += bytes_written;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
APR_POOL_IMPLEMENT_ACCESSOR(thread)
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 154
^^^^^^^^^^^^^^^^^^^^^^^^
(*new) = (apr_thread_t *)apr_pcalloc(pool, sizeof(apr_thread_t));
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
APR_POOL_IMPLEMENT_ACCESSOR(thread)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 561
^^^^^^^^^^^^^^^^^^^^^^^^
if (!sbh || (sbh->child_num < 0))
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->port = ntohs((*new)->remote_addr->sa.sin.sin_port);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
return *mem;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sendrecv.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
while ((rv == -1) && (errno == EAGAIN || errno == EWOULDBLOCK)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->new_timeout > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 197
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_timeout = 0;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 127
^^^^^^^^^^^^^^^^^^^^^^^^
else if (APR_BRIGADE_EMPTY(ctx->b)) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 540
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmp_flush_bb = apr_brigade_split_ex(bb, flush_upto,
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
e->length += nbyte;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 864
^^^^^^^^^^^^^^^^^^^^^^^^
node->first_avail += size;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2040
^^^^^^^^^^^^^^^^^^^^^^^^
process_socket(thd, cs->p, csd, cs, process_slot, thread_slot);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2032
^^^^^^^^^^^^^^^^^^^^^^^^
worker_sockets[thread_slot] = csd = cs->pfd.desc.s;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 758
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = cs->pfd.desc.s;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 998
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2025
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr((void *)&defer_linger_chain, cs->chain,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.client_data = pt;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2030
^^^^^^^^^^^^^^^^^^^^^^^^
cs->chain = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 960
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.client_data = pt;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->sbh) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = active;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 102
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 382
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->cs)
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 146
^^^^^^^^^^^^^^^^^^^^^^^^
int elt_size = dst->elt_size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2515
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = i;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2518
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = i;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 457
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = i;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 361
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_escape_logitem(r->pool,
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 170
^^^^^^^^^^^^^^^^^^^^^^^^
endp = active->first_avail + SMALL_NODE_SIZE;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = endp;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = endp;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = endp;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 361
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_escape_logitem(r->pool,
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_bucket_read(e, str, len, block);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
&& e->length != (apr_size_t)-1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 38
^^^^^^^^^^^^^^^^^^^^^^^^
*length = b->length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
ok = apr_mmap_offset(&addr, m->mmap, b->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 217
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_file *a = data->data;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
if (!m->mmap) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 77
^^^^^^^^^^^^^^^^^^^^^^^^
m = apr_bucket_alloc(sizeof(*m), b->list);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 161
^^^^^^^^^^^^^^^^^^^^^^^^
f->fd = fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 219
^^^^^^^^^^^^^^^^^^^^^^^^
apr_file_t *f = a->fd;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1566
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_mask = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1567
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_list = apr_array_make(p, nelts, sizeof(char *));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 428
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->index_first, t->index_first, sizeof(int) * TABLE_HASH_SIZE);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1602
^^^^^^^^^^^^^^^^^^^^^^^^
for ( ; !TEST_CHAR(*ptr, T_HTTP_CTRLS); ++ptr) ;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 428
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->index_first, t->index_first, sizeof(int) * TABLE_HASH_SIZE);
------------------------
------------------------
 apr-1.6.3/time/unix/timestr.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 428
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->index_first, t->index_first, sizeof(int) * TABLE_HASH_SIZE);
------------------------
------------------------
 apr-1.6.3/time/unix/timestr.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = real_year / 1000 + '0';
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 428
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->index_first, t->index_first, sizeof(int) * TABLE_HASH_SIZE);
------------------------
------------------------
 apr-1.6.3/time/unix/timestr.c : 77
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_min / 10 + '0';
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 428
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->index_first, t->index_first, sizeof(int) * TABLE_HASH_SIZE);
------------------------
------------------------
 apr-1.6.3/time/unix/timestr.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = 'T';
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 429
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->index_last, t->index_last, sizeof(int) * TABLE_HASH_SIZE);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1602
^^^^^^^^^^^^^^^^^^^^^^^^
for ( ; !TEST_CHAR(*ptr, T_HTTP_CTRLS); ++ptr) ;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 429
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->index_last, t->index_last, sizeof(int) * TABLE_HASH_SIZE);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_etag.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
*next++ = HEX_DIGITS[next_digit];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = &pool->sibling;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 452
^^^^^^^^^^^^^^^^^^^^^^^^
apr_table_entry_t *next_elt = (apr_table_entry_t *) t->a.elts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1132
^^^^^^^^^^^^^^^^^^^^^^^^
pool->sibling->ref = &pool->sibling;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 460
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 460
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = i;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2557
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = i;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 146
^^^^^^^^^^^^^^^^^^^^^^^^
int elt_size = dst->elt_size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = arr->nelts;	/* Force overflow on push */
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 452
^^^^^^^^^^^^^^^^^^^^^^^^
apr_table_entry_t *next_elt = (apr_table_entry_t *) t->a.elts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_initialized = 0;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
new_data = apr_palloc(arr->pool, arr->elt_size * new_size);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
r->clength = clength;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
r->clength = clength;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1524
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->chunked) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 584
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_first[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 115
^^^^^^^^^^^^^^^^^^^^^^^^
range = apr_table_get(r->headers_in, "Request-Range");
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4717
^^^^^^^^^^^^^^^^^^^^^^^^
if ((status = apr_file_open(&fd, r->filename, APR_READ | APR_BINARY
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4686
^^^^^^^^^^^^^^^^^^^^^^^^
r->path_info && *r->path_info)
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1962
^^^^^^^^^^^^^^^^^^^^^^^^
rnew = apr_pcalloc(rrp, sizeof(request_rec));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 146
^^^^^^^^^^^^^^^^^^^^^^^^
int elt_size = dst->elt_size;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1962
^^^^^^^^^^^^^^^^^^^^^^^^
rnew = apr_pcalloc(rrp, sizeof(request_rec));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1962
^^^^^^^^^^^^^^^^^^^^^^^^
rnew = apr_pcalloc(rrp, sizeof(request_rec));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 455
^^^^^^^^^^^^^^^^^^^^^^^^
for (i = 0; i < t->a.nelts; i++, next_elt++) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1492
^^^^^^^^^^^^^^^^^^^^^^^^
rnew->read_body       = REQUEST_NO_BODY;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
res->nelts = arr->nelts;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1492
^^^^^^^^^^^^^^^^^^^^^^^^
rnew->read_body       = REQUEST_NO_BODY;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = arr->nelts;	/* Force overflow on push */
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1962
^^^^^^^^^^^^^^^^^^^^^^^^
rnew = apr_pcalloc(rrp, sizeof(request_rec));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 452
^^^^^^^^^^^^^^^^^^^^^^^^
apr_table_entry_t *next_elt = (apr_table_entry_t *) t->a.elts;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 2041
^^^^^^^^^^^^^^^^^^^^^^^^
rnew->kept_body = r->kept_body;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 2041
^^^^^^^^^^^^^^^^^^^^^^^^
rnew->kept_body = r->kept_body;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_initialized = 0;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1962
^^^^^^^^^^^^^^^^^^^^^^^^
rnew = apr_pcalloc(rrp, sizeof(request_rec));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
res->a.pool = p;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 146
^^^^^^^^^^^^^^^^^^^^^^^^
int elt_size = dst->elt_size;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 193
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = arr->elt_size;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = arr->nelts;	/* Force overflow on push */
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 452
^^^^^^^^^^^^^^^^^^^^^^^^
apr_table_entry_t *next_elt = (apr_table_entry_t *) t->a.elts;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 192
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = arr->elts;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
if (!TABLE_INDEX_IS_INITIALIZED(t, hash)) {
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 454
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_initialized = 0;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 735
^^^^^^^^^^^^^^^^^^^^^^^^
memset (uptr, '\0', sizeof(*uptr));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 182
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 182
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
f = apr_bucket_alloc(sizeof(*f), b->list);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 183
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 161
^^^^^^^^^^^^^^^^^^^^^^^^
f->fd = fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 161
^^^^^^^^^^^^^^^^^^^^^^^^
f->fd = fd;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
f->readpool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (!apr_pool_is_ancestor(a->readpool, reqpool)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
f->readpool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
f->readpool = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 164
^^^^^^^^^^^^^^^^^^^^^^^^
f->can_mmap = 1;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 164
^^^^^^^^^^^^^^^^^^^^^^^^
f->can_mmap = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
f->read_size = APR_BUCKET_BUFF_SIZE;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
f->read_size = APR_BUCKET_BUFF_SIZE;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1566
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_mask = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1567
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_list = apr_array_make(p, nelts, sizeof(char *));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 246
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_register((*new)->pool, (void *)(*new),
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = pool;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 211
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->filedes = fd;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_pcalloc(p, nelts * elt_size);
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 231
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->is_pipe = 0;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 739
^^^^^^^^^^^^^^^^^^^^^^^^
while (next && (next->frec != ap_subreq_core_filter_handle)
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 231
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->is_pipe = 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 216
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->buffered = (flag & APR_FOPEN_BUFFERED) > 0;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
f = f->next;
------------------------


------------------------
 apr-1.6.3/file_io/unix/filedup.c : 146
^^^^^^^^^^^^^^^^^^^^^^^^
if (old_file->buffered) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 216
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->buffered = (flag & APR_FOPEN_BUFFERED) > 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 233
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->ungetchar = -1;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 233
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->ungetchar = -1;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 70
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = to;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 228
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->buffer = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 479
^^^^^^^^^^^^^^^^^^^^^^^^
&f->c->output_filters);
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 228
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->buffer = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 236
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->bufpos = 0;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
(*new) = (apr_file_t *)apr_pcalloc(pool, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->dataRead = 0;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 238
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->direction = 0;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(new->a.elts, t->a.elts, t->a.nelts * sizeof(apr_table_entry_t));
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 238
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->direction = 0;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_palloc(p, nelts * elt_size);
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 235
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->filePtr = 0;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 430
^^^^^^^^^^^^^^^^^^^^^^^^
new->index_initialized = t->index_initialized;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_bucket_read(e, str, len, block);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 496
^^^^^^^^^^^^^^^^^^^^^^^^
e = apr_bucket_eos_create(f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1094
^^^^^^^^^^^^^^^^^^^^^^^^
cs->queue_timestamp = apr_time_now();
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_split_ex(ctx->b, e, ctx->tmpbb);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 244
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(c->input_filters, bb, mode,
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 148
^^^^^^^^^^^^^^^^^^^^^^^^
c->keepalive = AP_CONN_UNKNOWN;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
ret = epoll_ctl(pollset->p->epoll_fd, EPOLL_CTL_ADD,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 792
^^^^^^^^^^^^^^^^^^^^^^^^
switch (method[0])
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 719
^^^^^^^^^^^^^^^^^^^^^^^^
(APR_BUCKET_IS_METADATA(bucket) || (bucket->length == 0))) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 74
^^^^^^^^^^^^^^^^^^^^^^^^
res->nelts = 0;		/* No active elements yet... */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_palloc(p, nelts * elt_size);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
if (!TABLE_INDEX_IS_INITIALIZED(t, hash)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (char)(n % 10);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
bkt = APR_BUCKET_NEXT(bkt))
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 758
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_t *csd = cs->pfd.desc.s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 852
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node = allocator_alloc(pool->allocator, size)) == NULL) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 434
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket *e = APR_BRIGADE_LAST(b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 596
^^^^^^^^^^^^^^^^^^^^^^^^
e = apr_bucket_heap_create(buf, APR_BUCKET_BUFF_SIZE,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 868
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 281
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 281
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = *s++;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 312
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_escape_logitem(r->pool, ap_get_remote_host(r->connection,
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 291
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1209
^^^^^^^^^^^^^^^^^^^^^^^^
r->pool            = p;
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 291
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = ' ';
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 312
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_escape_logitem(r->pool, ap_get_remote_host(r->connection,
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_sec % 10 + '0';
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1210
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection      = conn;
------------------------
------------------------
 httpd-2.4.28/server/util_time.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
*date_str++ = xt.tm_sec % 10 + '0';
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1211
^^^^^^^^^^^^^^^^^^^^^^^^
r->server          = conn->base_server;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1188
^^^^^^^^^^^^^^^^^^^^^^^^
multi_log_state *mls = ap_get_module_config(r->server->module_config,
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1211
^^^^^^^^^^^^^^^^^^^^^^^^
r->server          = conn->base_server;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1162
^^^^^^^^^^^^^^^^^^^^^^^^
while (r->next) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 940
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = ": ";
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1159
^^^^^^^^^^^^^^^^^^^^^^^^
while (orig->prev) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 940
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = ": ";
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->main || r->connection->keepalive == AP_CONN_CLOSE ||
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 941
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(": ") - 1;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 941
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(": ") - 1;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 616
^^^^^^^^^^^^^^^^^^^^^^^^
r->the_request = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 361
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_escape_logitem(r->pool,
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 616
^^^^^^^^^^^^^^^^^^^^^^^^
r->the_request = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->assbackwards) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 944
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->val);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 944
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->val);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1517
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->header_only || r->status == HTTP_NO_CONTENT) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 946
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = CRLF;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 946
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = CRLF;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 906
^^^^^^^^^^^^^^^^^^^^^^^^
r->protocol  = apr_pstrdup(r->pool, "HTTP/1.0");
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 947
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(CRLF) - 1;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 906
^^^^^^^^^^^^^^^^^^^^^^^^
r->protocol  = apr_pstrdup(r->pool, "HTTP/1.0");
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 621
^^^^^^^^^^^^^^^^^^^^^^^^
r->request_time = apr_time_now();
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 640
^^^^^^^^^^^^^^^^^^^^^^^^
apr_time_t request_time = r->request_time;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 621
^^^^^^^^^^^^^^^^^^^^^^^^
r->request_time = apr_time_now();
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1024
^^^^^^^^^^^^^^^^^^^^^^^^
r->status_line = ap_get_status_line(r->status);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1076
^^^^^^^^^^^^^^^^^^^^^^^^
vec[2].iov_base = (void *)(r->status_line);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 940
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = ": ";
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1024
^^^^^^^^^^^^^^^^^^^^^^^^
r->status_line = ap_get_status_line(r->status);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 940
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = ": ";
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
r->status = original_status;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 941
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(": ") - 1;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 404
^^^^^^^^^^^^^^^^^^^^^^^^
return pfmt(r->pool, r->status);
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
r->status = original_status;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 941
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(": ") - 1;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1216
^^^^^^^^^^^^^^^^^^^^^^^^
r->allowed_methods = ap_make_method_list(p, 2);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 947
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(CRLF) - 1;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1216
^^^^^^^^^^^^^^^^^^^^^^^^
r->allowed_methods = ap_make_method_list(p, 2);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1522
^^^^^^^^^^^^^^^^^^^^^^^^
r->sent_bodyct = 1;         /* Whatever follows is real body stuff... */
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 414
^^^^^^^^^^^^^^^^^^^^^^^^
if (!r->sent_bodyct || !r->bytes_sent) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1522
^^^^^^^^^^^^^^^^^^^^^^^^
r->sent_bodyct = 1;         /* Whatever follows is real body stuff... */
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 414
^^^^^^^^^^^^^^^^^^^^^^^^
if (!r->sent_bodyct || !r->bytes_sent) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1450
^^^^^^^^^^^^^^^^^^^^^^^^
r->clength = 0;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1450
^^^^^^^^^^^^^^^^^^^^^^^^
r->clength = 0;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1524
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->chunked) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 944
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->val);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 947
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(CRLF) - 1;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1895
^^^^^^^^^^^^^^^^^^^^^^^^
if (ctx->seen_eoc) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1853
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = apr_pcalloc(r->pool, sizeof(outerror_filter_ctx_t));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1196
^^^^^^^^^^^^^^^^^^^^^^^^
log_request_state *state = apr_pcalloc(r->pool, sizeof(log_request_state));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1238
^^^^^^^^^^^^^^^^^^^^^^^^
r->read_length     = 0;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1238
^^^^^^^^^^^^^^^^^^^^^^^^
r->read_length     = 0;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1218
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_in      = apr_table_make(r->pool, 25);
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 115
^^^^^^^^^^^^^^^^^^^^^^^^
range = apr_table_get(r->headers_in, "Request-Range");
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1218
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_in      = apr_table_make(r->pool, 25);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1435
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_out = r->err_headers_out;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 902
^^^^^^^^^^^^^^^^^^^^^^^^
apr_table_do(uniq_field_values, varies, r->headers_out, "Vary", NULL);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1435
^^^^^^^^^^^^^^^^^^^^^^^^
r->headers_out = r->err_headers_out;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1436
^^^^^^^^^^^^^^^^^^^^^^^^
r->err_headers_out = tmp;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1381
^^^^^^^^^^^^^^^^^^^^^^^^
if (!apr_is_empty_table(r->err_headers_out)) {
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1436
^^^^^^^^^^^^^^^^^^^^^^^^
r->err_headers_out = tmp;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1220
^^^^^^^^^^^^^^^^^^^^^^^^
r->subprocess_env  = apr_table_make(r->pool, 25);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1394
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_table_get(r->subprocess_env, "force-no-vary") != NULL) {
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1220
^^^^^^^^^^^^^^^^^^^^^^^^
r->subprocess_env  = apr_table_make(r->pool, 25);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1224
^^^^^^^^^^^^^^^^^^^^^^^^
r->notes           = apr_table_make(r->pool, 5);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1407
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_table_get(r->notes, "no-etag") != NULL) {
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1224
^^^^^^^^^^^^^^^^^^^^^^^^
r->notes           = apr_table_make(r->pool, 5);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1424
^^^^^^^^^^^^^^^^^^^^^^^^
ctype = ap_make_content_type(r, r->content_type);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1449
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_encoding = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1429
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->content_encoding) {
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1449
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_encoding = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1448
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_languages = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1434
^^^^^^^^^^^^^^^^^^^^^^^^
if (!apr_is_empty_array(r->content_languages)) {
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1448
^^^^^^^^^^^^^^^^^^^^^^^^
r->content_languages = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1213
^^^^^^^^^^^^^^^^^^^^^^^^
r->user            = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 339
^^^^^^^^^^^^^^^^^^^^^^^^
char *rvalue = r->user;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1213
^^^^^^^^^^^^^^^^^^^^^^^^
r->user            = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1214
^^^^^^^^^^^^^^^^^^^^^^^^
r->ap_auth_type    = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1214
^^^^^^^^^^^^^^^^^^^^^^^^
r->ap_auth_type    = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1247
^^^^^^^^^^^^^^^^^^^^^^^^
r->used_path_info = AP_REQ_DEFAULT_PATH_INFO;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1527
^^^^^^^^^^^^^^^^^^^^^^^^
if (!r->eos_sent) {
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1395
^^^^^^^^^^^^^^^^^^^^^^^^
r->eos_sent = 0;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 312
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_escape_logitem(r->pool, ap_get_remote_host(r->connection,
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1234
^^^^^^^^^^^^^^^^^^^^^^^^
r->per_dir_config  = r->server->lookup_defaults;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 741
^^^^^^^^^^^^^^^^^^^^^^^^
if ((t_seconds != cached_time->t) ||
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 740
^^^^^^^^^^^^^^^^^^^^^^^^
*cached_time = request_time_cache[i];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 740
^^^^^^^^^^^^^^^^^^^^^^^^
*cached_time = request_time_cache[i];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1506
^^^^^^^^^^^^^^^^^^^^^^^^
ap_pass_brigade(r->output_filters, bb);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1401
^^^^^^^^^^^^^^^^^^^^^^^^
r->output_filters = r->proto_output_filters;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 740
^^^^^^^^^^^^^^^^^^^^^^^^
*cached_time = request_time_cache[i];
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 740
^^^^^^^^^^^^^^^^^^^^^^^^
*cached_time = request_time_cache[i];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1232
^^^^^^^^^^^^^^^^^^^^^^^^
r->input_filters   = r->proto_input_filters;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 740
^^^^^^^^^^^^^^^^^^^^^^^^
*cached_time = request_time_cache[i];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1229
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_output_filters = conn->output_filters;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 238
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(r->proto_input_filters, bb, AP_MODE_GETLINE,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1458
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->no_cache && !apr_table_get(r->headers_out, "Expires")) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1207
^^^^^^^^^^^^^^^^^^^^^^^^
r = apr_pcalloc(p, sizeof(request_rec));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 361
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_escape_logitem(r->pool,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/core.c : 994
^^^^^^^^^^^^^^^^^^^^^^^^
if (!r->useragent_addr || (r->useragent_addr == conn->client_addr)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1249
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_addr = conn->client_addr;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/scoreboard.c : 507
^^^^^^^^^^^^^^^^^^^^^^^^
if (r && r->useragent_ip) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1250
^^^^^^^^^^^^^^^^^^^^^^^^
r->useragent_ip = conn->client_ip;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1219
^^^^^^^^^^^^^^^^^^^^^^^^
r->trailers_in     = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1223
^^^^^^^^^^^^^^^^^^^^^^^^
r->trailers_out    = apr_table_make(r->pool, 5);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1566
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_mask = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 1567
^^^^^^^^^^^^^^^^^^^^^^^^
ml->method_list = apr_array_make(p, nelts, sizeof(char *));
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_pcalloc(p, nelts * elt_size);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1334
^^^^^^^^^^^^^^^^^^^^^^^^
if (!ctx->headers_sent && !check_headers(r)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1306
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx = apr_pcalloc(r->pool, sizeof(header_filter_ctx));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_pcalloc(p, nelts * elt_size);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_pcalloc(p, nelts * elt_size);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 434
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket *e = APR_BRIGADE_LAST(b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 596
^^^^^^^^^^^^^^^^^^^^^^^^
e = apr_bucket_heap_create(buf, APR_BUCKET_BUFF_SIZE,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 127
^^^^^^^^^^^^^^^^^^^^^^^^
else if (APR_BRIGADE_EMPTY(ctx->b)) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 759
^^^^^^^^^^^^^^^^^^^^^^^^
cached_time->t = t_seconds;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/strings/apr_snprintf.c : 1382
^^^^^^^^^^^^^^^^^^^^^^^^
*vbuff.curpos = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 765
^^^^^^^^^^^^^^^^^^^^^^^^
cached_time->t_validate = t_seconds;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1884
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->bb = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1848
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(r->pool, r->connection->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 28
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount++;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
&& e->length != (apr_size_t)-1);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 136
^^^^^^^^^^^^^^^^^^^^^^^^
arr->nalloc = new_size;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 135
^^^^^^^^^^^^^^^^^^^^^^^^
arr->elts = new_data;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 httpd-2.4.28/server/request.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
r->mtime = dependency_mtime;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/config.c : 431
^^^^^^^^^^^^^^^^^^^^^^^^
r->handler = handler;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_filter.c : 646
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(r->request_config, &filter_module, ctx);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/strings/apr_cpystrn.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
if (!(*d = *src)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = (apr_size_t)(-1);
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = -1;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = p;
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 49
^^^^^^^^^^^^^^^^^^^^^^^^
h = apr_bucket_alloc(sizeof(*h), b->list);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 85
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 561
^^^^^^^^^^^^^^^^^^^^^^^^
if (!sbh || (sbh->child_num < 0))
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->port = ntohs((*new)->remote_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->salen = sa.salen;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2522
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
net->in_ctx = ctx = apr_palloc(f->c->pool, sizeof(*ctx));
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 323
^^^^^^^^^^^^^^^^^^^^^^^^
if (INSERT_BEFORE(f, *outf)) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 253
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 368
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = apr_pcalloc(c->pool, sizeof(reqtimeout_con_cfg));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
apr_socket_timeout_set(ccfg->socket, saved_sock_timeout);
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 553
^^^^^^^^^^^^^^^^^^^^^^^^
return next->frec->filter_func.in_func(next, bb, mode, block,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 247
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, AP_MODE_GETLINE, APR_NONBLOCK_READ, remaining);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5202
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, e);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1149
^^^^^^^^^^^^^^^^^^^^^^^^
*newpool = pool;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 590
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_tag(ctx->deferred_write_pool, "deferred_write");
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1515
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->headers_sent = 1;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = APR_BUCKET_BUFF_SIZE; /* note the real buffer size */
------------------------
------------------------
 httpd-2.4.28/server/eoc_bucket.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &ap_bucket_type_eoc;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
int process_slot = ti->pslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2191
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->pslot = my_child_num;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->salen = sa.salen;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 719
^^^^^^^^^^^^^^^^^^^^^^^^
(APR_BUCKET_IS_METADATA(bucket) || (bucket->length == 0))) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------
------------------------
 httpd-2.4.28/server/eor_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/eor_bucket.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1029
^^^^^^^^^^^^^^^^^^^^^^^^
*active->ref = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1088
^^^^^^^^^^^^^^^^^^^^^^^^
node->ref = &node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 849
^^^^^^^^^^^^^^^^^^^^^^^^
list_remove(node);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 396
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->min_rate        = MRT_DEFAULT_HEADER_MIN_RATE;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1858
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BUCKET_NEXT(e))
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1884
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->bb = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1883
^^^^^^^^^^^^^^^^^^^^^^^^
if (ctx->bb == NULL) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1884
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->bb = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1848
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(r->pool, r->connection->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1673
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->data_sent = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1868
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1887
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_fwrite(f->next, ctx->bb, str, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1334
^^^^^^^^^^^^^^^^^^^^^^^^
if (!ctx->headers_sent && !check_headers(r)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1306
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx = apr_pcalloc(r->pool, sizeof(header_filter_ctx));
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1306
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx = apr_pcalloc(r->pool, sizeof(header_filter_ctx));
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1860
^^^^^^^^^^^^^^^^^^^^^^^^
if (AP_BUCKET_IS_ERROR(e)) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->data = data;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 491
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BUCKET_IS_METADATA(bucket)) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 30
^^^^^^^^^^^^^^^^^^^^^^^^
b->start       = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
b->free = apr_bucket_free;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
while (first && (first->next != (*outf))) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 792
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(bucket)) {
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->buffered_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
e->length += nbyte;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 29
^^^^^^^^^^^^^^^^^^^^^^^^
b->length      = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->mutex = mutex;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 210
^^^^^^^^^^^^^^^^^^^^^^^^
{
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
*s = apr_palloc(r->pool, current_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2025
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr((void *)&defer_linger_chain, cs->chain,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2030
^^^^^^^^^^^^^^^^^^^^^^^^
cs->chain = NULL;
------------------------


------------------------
 httpd-2.4.28/server/eor_bucket.c : 37
^^^^^^^^^^^^^^^^^^^^^^^^
ap_increment_counts(r->connection->sbh, r);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 736
^^^^^^^^^^^^^^^^^^^^^^^^
cs->c->sbh = NULL;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 673
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(*saveto, *b);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 152
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_HANDLER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 998
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 152
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_HANDLER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2039
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 940
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = ": ";
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 941
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(": ") - 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 944
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 946
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = CRLF;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 947
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(CRLF) - 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 947
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(CRLF) - 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 938
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 940
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = ": ";
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 941
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = sizeof(": ") - 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = (void*)(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 548
^^^^^^^^^^^^^^^^^^^^^^^^
apr_size_t len = vec[i].iov_len;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 944
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 944
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_len = strlen(t_elt->val);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 549
^^^^^^^^^^^^^^^^^^^^^^^^
memcpy(buf, (const void *) vec[i].iov_base, len);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 946
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = CRLF;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 946
^^^^^^^^^^^^^^^^^^^^^^^^
vec_next->iov_base = CRLF;
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 349
^^^^^^^^^^^^^^^^^^^^^^^^
while (!INSERT_BEFORE(f, fscan->next))
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 181
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 169
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_file;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 335
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 333
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 334
^^^^^^^^^^^^^^^^^^^^^^^^
if (APR_BUCKET_IS_METADATA(e) || len > APR_BUCKET_BUFF_SIZE/4) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_mmap.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_mmap;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 235
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_bucket_read(e, &str, &len, block);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
b->type = &apr_bucket_type_heap;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->type   = &apr_bucket_type_immortal;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
b->length = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 58
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = start;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  = 0;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
*str = a->data;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 60
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = (char *)buf;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 383
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_register((*new)->pool, (void *)(*new), socket_cleanup,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->owner = pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 222
^^^^^^^^^^^^^^^^^^^^^^^^
{
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1011
^^^^^^^^^^^^^^^^^^^^^^^^
if ((mutex = apr_allocator_mutex_get(pool->parent->allocator)) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 446
^^^^^^^^^^^^^^^^^^^^^^^^
max_index = allocator->max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
max_free_index = allocator->max_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 448
^^^^^^^^^^^^^^^^^^^^^^^^
current_free_index = allocator->current_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 241
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index += max_free_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 493
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index = current_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 493
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->current_free_index = current_free_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (allocator->mutex)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 222
^^^^^^^^^^^^^^^^^^^^^^^^
{
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 469
^^^^^^^^^^^^^^^^^^^^^^^^
if ((node->next = allocator->free[index]) == NULL
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
memset(new_allocator, 0, SIZEOF_ALLOCATOR_T);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1824
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_PREPEND(bb, ctx->bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 47
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount--;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 61
^^^^^^^^^^^^^^^^^^^^^^^^
r->refcount = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 604
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-1.6.3/file_io/unix/open.c : 407
^^^^^^^^^^^^^^^^^^^^^^^^
APR_POOL_IMPLEMENT_ACCESSOR(file)
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 103
^^^^^^^^^^^^^^^^^^^^^^^^
b->list = list;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
return (void*) __sync_val_compare_and_swap(mem, cmp, with);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
return (void*) __sync_val_compare_and_swap(mem, cmp, with);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 561
^^^^^^^^^^^^^^^^^^^^^^^^
if (!sbh || (sbh->child_num < 0))
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 272
^^^^^^^^^^^^^^^^^^^^^^^^
if (apr_atomic_casptr
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
bkt = APR_BUCKET_NEXT(bkt))
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1229
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_output_filters = conn->output_filters;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 144
^^^^^^^^^^^^^^^^^^^^^^^^
ap_update_child_status_from_conn(c->sbh, SERVER_BUSY_READ, c);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4986
^^^^^^^^^^^^^^^^^^^^^^^^
c->sbh = sbh;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 148
^^^^^^^^^^^^^^^^^^^^^^^^
c->keepalive = AP_CONN_UNKNOWN;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->main || r->connection->keepalive == AP_CONN_CLOSE ||
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 148
^^^^^^^^^^^^^^^^^^^^^^^^
c->keepalive = AP_CONN_UNKNOWN;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &reqtimeout_module, ccfg);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 418
^^^^^^^^^^^^^^^^^^^^^^^^
ap_get_module_config(r->connection->conn_config, &reqtimeout_module);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 589
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_create(&ctx->deferred_write_pool, c->pool);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 370
^^^^^^^^^^^^^^^^^^^^^^^^
conf->etag_remove =
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1883
^^^^^^^^^^^^^^^^^^^^^^^^
if (ctx->bb == NULL) {
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
if (frec->ftype < AP_FTYPE_CONNECTION && (*r_filters == *c_filters)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 408
^^^^^^^^^^^^^^^^^^^^^^^^
conf->max_reversals = new->max_reversals != AP_MAXRANGES_UNSET ? new->max_reversals : base->max_reversals;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 214
^^^^^^^^^^^^^^^^^^^^^^^^
conf->refs = new->refs;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (r->main || r->connection->keepalive == AP_CONN_CLOSE ||
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 280
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_KEEPALIVE;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 280
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_KEEPALIVE;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalive = AP_CONN_CLOSE;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = (c->keepalives > 0);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 281
^^^^^^^^^^^^^^^^^^^^^^^^
r->connection->keepalives++;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1775
^^^^^^^^^^^^^^^^^^^^^^^^
cache->dir_conf_tested = sec_ent;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 472
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1775
^^^^^^^^^^^^^^^^^^^^^^^^
cache->dir_conf_tested = sec_ent;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 472
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1776
^^^^^^^^^^^^^^^^^^^^^^^^
cache->dir_conf_merged = r->per_dir_config;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 470
^^^^^^^^^^^^^^^^^^^^^^^^
e = apr_bucket_heap_create(buf, APR_BUCKET_BUFF_SIZE,
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1786
^^^^^^^^^^^^^^^^^^^^^^^^
cache->per_dir_result = r->per_dir_config;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 437
^^^^^^^^^^^^^^^^^^^^^^^^
cache->walked = apr_array_make(r->pool, 4, sizeof(walk_walked_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/request.c : 436
^^^^^^^^^^^^^^^^^^^^^^^^
cache = apr_pcalloc(r->pool, sizeof(*cache));
------------------------


------------------------
 httpd-2.4.28/server/config.c : 369
^^^^^^^^^^^^^^^^^^^^^^^^
if (filters->frec->filter_init_func && filters->r == r) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
f = f->next;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 69
^^^^^^^^^^^^^^^^^^^^^^^^
if (f->r == from) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_eos.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_eos;
------------------------
------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 466
^^^^^^^^^^^^^^^^^^^^^^^^
for (e = APR_BRIGADE_FIRST(bb);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1098
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.reqevents = APR_POLLIN;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 956
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.reqevents = APR_POLLIN;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 354
^^^^^^^^^^^^^^^^^^^^^^^^
bb = apr_brigade_create(c->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4995
^^^^^^^^^^^^^^^^^^^^^^^^
c->pool = ptrans;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 244
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(c->input_filters, bb, mode,
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 358
^^^^^^^^^^^^^^^^^^^^^^^^
ap_pass_brigade(c->output_filters, bb);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_filters.c : 496
^^^^^^^^^^^^^^^^^^^^^^^^
e = apr_bucket_eos_create(f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5017
^^^^^^^^^^^^^^^^^^^^^^^^
c->bucket_alloc = alloc;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 382
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->cs)
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 379
^^^^^^^^^^^^^^^^^^^^^^^^
c->data_in_input_filters = (rv == APR_SUCCESS);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 948
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(c->conn_config, &mpm_event_module, cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1036
^^^^^^^^^^^^^^^^^^^^^^^^
rv = output_filter->frec->filter_func.out_func(output_filter, NULL);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1033
^^^^^^^^^^^^^^^^^^^^^^^^
while (output_filter->next != NULL) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 93
^^^^^^^^^^^^^^^^^^^^^^^^
*time_left_p = ccfg->timeout_at - now;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = ccfg->max_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
if (!ccfg->socket) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->socket = ap_get_conn_socket(f->c);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, mode, block, readbytes);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 313
^^^^^^^^^^^^^^^^^^^^^^^^
for (e = APR_BRIGADE_FIRST(ctx->b);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 326
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(ctx->b, ctx->tmpbb);
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 121
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_split_ex(ctx->b, e, ctx->tmpbb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
*after_point = APR_BRIGADE_FIRST(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 68
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, apr_bucket_socket_create(p, a->list));
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 326
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(ctx->b, ctx->tmpbb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 5202
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, e);
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
ret = epoll_ctl(pollset->p->epoll_fd, EPOLL_CTL_ADD,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_INSERT_TAIL(&q->head, el, event_conn_state_t, timeout_list);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 164
^^^^^^^^^^^^^^^^^^^^^^^^
ev.events = get_epoll_event(descriptor->reqevents);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 956
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.reqevents = APR_POLLIN;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
q_expiry = el->queue_timestamp + q->timeout;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
cs = apr_pcalloc(p, sizeof(event_conn_state_t));
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1100
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_APPEND(cs->sc->ka_q, cs);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 apr-1.6.3/poll/unix/epoll.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
ret = epoll_ctl(pollset->p->epoll_fd, EPOLL_CTL_DEL,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 308
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_REMOVE(el, timeout_list);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1224
^^^^^^^^^^^^^^^^^^^^^^^^
csd = cs->pfd.desc.s;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 957
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pfd.desc.s = sock;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1676
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 962
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_ELEM_INIT(cs);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1225
^^^^^^^^^^^^^^^^^^^^^^^^
ptrans = cs->p;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 952
^^^^^^^^^^^^^^^^^^^^^^^^
cs->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 446
^^^^^^^^^^^^^^^^^^^^^^^^
max_index = allocator->max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 446
^^^^^^^^^^^^^^^^^^^^^^^^
max_index = allocator->max_index;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 492
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->max_index = max_index;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1087
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = node;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
*ref = node->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 336
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*ref = node->next) == NULL && i >= max_index) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 473
^^^^^^^^^^^^^^^^^^^^^^^^
allocator->free[index] = node;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 166
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->data = data;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2562
^^^^^^^^^^^^^^^^^^^^^^^^
c = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 142
^^^^^^^^^^^^^^^^^^^^^^^^
return thread->func(thread, thread->data);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->func = func;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 561
^^^^^^^^^^^^^^^^^^^^^^^^
if (!sbh || (sbh->child_num < 0))
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 210
^^^^^^^^^^^^^^^^^^^^^^^^
conf->d = new->d;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 httpd-2.4.28/server/core.c : 212
^^^^^^^^^^^^^^^^^^^^^^^^
conf->d_components = new->d_components;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 212
^^^^^^^^^^^^^^^^^^^^^^^^
conf->d_components = new->d_components;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 httpd-2.4.28/server/core.c : 246
^^^^^^^^^^^^^^^^^^^^^^^^
conf->override = new->override;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 1212
^^^^^^^^^^^^^^^^^^^^^^^^
if (d->limit_req_body == AP_LIMIT_REQ_BODY_UNSET) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1605
^^^^^^^^^^^^^^^^^^^^^^^^
if (dconf->sec_file) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 httpd-2.4.28/server/request.c : 1804
^^^^^^^^^^^^^^^^^^^^^^^^
if (dconf && dconf->sec_if) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
conf->sec_if = new->sec_if;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
conf->sec_if = new->sec_if;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
conf->r = new->r;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
conf->r = new->r;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/core.c : 215
^^^^^^^^^^^^^^^^^^^^^^^^
conf->condition = new->condition;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 406
^^^^^^^^^^^^^^^^^^^^^^^^
conf->max_ranges = new->max_ranges != AP_MAXRANGES_UNSET ? new->max_ranges : base->max_ranges;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 408
^^^^^^^^^^^^^^^^^^^^^^^^
conf->max_reversals = new->max_reversals != AP_MAXRANGES_UNSET ? new->max_reversals : base->max_reversals;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/config.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
conf_vector[i] = (*df)(p, base_vector[i], new_vector[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/config.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
conf_vector[i] = base_vector[i];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/config.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
conf_vector[i] = base_vector[i];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core.c : 918
^^^^^^^^^^^^^^^^^^^^^^^^
hostname_lookups = ((core_dir_config *)ap_get_core_module_config(dir_config))
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 426
^^^^^^^^^^^^^^^^^^^^^^^^
node->next = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
node = node->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1116
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1117
^^^^^^^^^^^^^^^^^^^^^^^^
pool->tag = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1109
^^^^^^^^^^^^^^^^^^^^^^^^
pool->active = pool->self = node;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1104
^^^^^^^^^^^^^^^^^^^^^^^^
pool->self_first_avail = (char *)pool + SIZEOF_POOL_T;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1231
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_input_filters = conn->input_filters;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 345
^^^^^^^^^^^^^^^^^^^^^^^^
*outf = f;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 345
^^^^^^^^^^^^^^^^^^^^^^^^
*outf = f;
------------------------


------------------------
 httpd-2.4.28/server/connection.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_pass_brigade(c->output_filters, bb);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 345
^^^^^^^^^^^^^^^^^^^^^^^^
*outf = f;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 389
^^^^^^^^^^^^^^^^^^^^^^^^
cfg = ap_get_module_config(c->base_server->module_config,
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 382
^^^^^^^^^^^^^^^^^^^^^^^^
ap_get_module_config(c->conn_config, &reqtimeout_module);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4984
^^^^^^^^^^^^^^^^^^^^^^^^
conn_rec *c = (conn_rec *) apr_pcalloc(ptrans, sizeof(conn_rec));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1930
^^^^^^^^^^^^^^^^^^^^^^^^
int thread_slot = ti->tslot;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2192
^^^^^^^^^^^^^^^^^^^^^^^^
my_info->tslot = i;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->salen = sa.salen;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
return (void*) __sync_val_compare_and_swap(mem, cmp, with);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 71
^^^^^^^^^^^^^^^^^^^^^^^^
return (void*) __sync_val_compare_and_swap(mem, cmp, with);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 488
^^^^^^^^^^^^^^^^^^^^^^^^
end_elt = ((apr_table_entry_t *) t->a.elts) + t->index_last[hash];
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 725
^^^^^^^^^^^^^^^^^^^^^^^^
*ll = '\0';
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 apr-util-1.6.1/uri/apr_uri.c : 768
^^^^^^^^^^^^^^^^^^^^^^^^
if (*s == 0) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 725
^^^^^^^^^^^^^^^^^^^^^^^^
*ll = '\0';
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1239
^^^^^^^^^^^^^^^^^^^^^^^^
r->read_body       = REQUEST_NO_BODY;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
return (shutdown(thesocket->socketdes, how) == -1) ? errno : APR_SUCCESS;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 417
^^^^^^^^^^^^^^^^^^^^^^^^
(*new_sbh)->child_num = child_num;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_kill(b->p, b, brigade_cleanup);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1884
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->bb = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1883
^^^^^^^^^^^^^^^^^^^^^^^^
if (ctx->bb == NULL) {
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1884
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->bb = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1848
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(r->pool, r->connection->bucket_alloc);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1848
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(r->pool, r->connection->bucket_alloc);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1868
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 552
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_CONCAT(bb, ctx->tmp_flush_bb);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 43
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INSERT_AFTER(a, b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 89
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_SPLICE_HEAD(&a->list, e, f, apr_bucket, link);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 719
^^^^^^^^^^^^^^^^^^^^^^^^
(APR_BUCKET_IS_METADATA(bucket) || (bucket->length == 0))) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 125
^^^^^^^^^^^^^^^^^^^^^^^^
if (str[len-1] == APR_ASCII_LF)
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1229
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_output_filters = conn->output_filters;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 31
^^^^^^^^^^^^^^^^^^^^^^^^
b->data        = NULL;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 950
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
if ((stat = sononblock(sock->socketdes)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 219
^^^^^^^^^^^^^^^^^^^^^^^^
apr_file_t *f = a->fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 161
^^^^^^^^^^^^^^^^^^^^^^^^
f->fd = fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 36
^^^^^^^^^^^^^^^^^^^^^^^^
(*h->free_func)(h->base);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 161
^^^^^^^^^^^^^^^^^^^^^^^^
f->fd = fd;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 65
^^^^^^^^^^^^^^^^^^^^^^^^
h->base = (char *) buf;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 447
^^^^^^^^^^^^^^^^^^^^^^^^
remaining = h->alloc_len - (e->length + (apr_size_t)e->start);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
f->readpool = p;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (!apr_pool_is_ancestor(a->readpool, reqpool)) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 162
^^^^^^^^^^^^^^^^^^^^^^^^
f->readpool = p;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
h->alloc_len = length;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_file.c : 164
^^^^^^^^^^^^^^^^^^^^^^^^
f->can_mmap = 1;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 67
^^^^^^^^^^^^^^^^^^^^^^^^
h->free_func = free_func;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->remote_addr_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 297
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr_unknown = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 38
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, val);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1662
^^^^^^^^^^^^^^^^^^^^^^^^
switch (cs->pub.state) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 788
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_LINGER_NORMAL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 105
^^^^^^^^^^^^^^^^^^^^^^^^
if (t <= 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sendrecv.c : 81
^^^^^^^^^^^^^^^^^^^^^^^^
rv = read(sock->socketdes, buf, (*len));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_socket.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_socket;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 219
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->min_rate > 0 && rv == APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 409
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->min_rate        = MRT_DEFAULT_HEADER_MIN_RATE;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_refcount.c : 57
^^^^^^^^^^^^^^^^^^^^^^^^
b->data   = r;
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 796
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 582
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_STOPPING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pt->type = PT_CSD;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 283
^^^^^^^^^^^^^^^^^^^^^^^^
(*s)[bytes_handled-1] = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2091
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 283
^^^^^^^^^^^^^^^^^^^^^^^^
(*s)[bytes_handled-1] = '\0';
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 283
^^^^^^^^^^^^^^^^^^^^^^^^
(*s)[bytes_handled-1] = '\0';
------------------------


------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 459
^^^^^^^^^^^^^^^^^^^^^^^^
while (fscan->next != f) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 80
^^^^^^^^^^^^^^^^^^^^^^^^
sock->protocol = protocol;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 160
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->td = (pthread_t *)apr_pcalloc(pool, sizeof(pthread_t));
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 564
^^^^^^^^^^^^^^^^^^^^^^^^
pthread_kill(*listener_os_thread, LISTENER_SIGNAL);
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 91
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(sock, APR_SO_NONBLOCK, 1);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 304
^^^^^^^^^^^^^^^^^^^^^^^^
apr_thread_cond_broadcast(queue_info->wait_for_idler);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
qi = apr_pcalloc(pool, sizeof(*qi));
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
rv = apr_thread_mutex_lock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 2408
^^^^^^^^^^^^^^^^^^^^^^^^
retained->mpm->mpm_state = AP_MPMQ_RUNNING;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 644
^^^^^^^^^^^^^^^^^^^^^^^^
*result = retained->mpm->mpm_state;
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 396
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 93
^^^^^^^^^^^^^^^^^^^^^^^^
*time_left_p = ccfg->timeout_at - now;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 396
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = new_timeout_at;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 397
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 79
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->max_timeout_at > 0 && new_timeout_at > ccfg->max_timeout_at) {
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 199
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = now + apr_time_from_sec(ccfg->new_max_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 397
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->max_timeout_at = 0;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 407
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_timeout     = MRT_DEFAULT_HEADER_TIMEOUT;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 197
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_timeout = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 407
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_timeout     = MRT_DEFAULT_HEADER_TIMEOUT;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->new_max_timeout > 0) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 408
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = MRT_DEFAULT_HEADER_MAX_TIMEOUT;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 200
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 408
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->new_max_timeout = MRT_DEFAULT_HEADER_MAX_TIMEOUT;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 180
^^^^^^^^^^^^^^^^^^^^^^^^
if (ccfg->in_keep_alive) {
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = 0;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = 0;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 398
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->in_keep_alive = (c->keepalives > 0);
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 186
^^^^^^^^^^^^^^^^^^^^^^^^
rv = ap_get_brigade(f->next, bb, AP_MODE_SPECULATIVE, block, 1);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/core_filters.c : 120
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->b = apr_brigade_create(f->c->pool, f->c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 318
^^^^^^^^^^^^^^^^^^^^^^^^
e = APR_BRIGADE_FIRST(bbIn);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 329
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_REMOVE(e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 httpd-2.4.28/server/core.c : 5202
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bb, e);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 889
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 953
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
conn_state_t *cs = c->cs;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_core.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_LINGER;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 986
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_READ_REQUEST_LINE;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 366
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg = ap_get_module_config(c->conn_config, &reqtimeout_module);
------------------------
------------------------
 httpd-2.4.28/server/core.c : 4992
^^^^^^^^^^^^^^^^^^^^^^^^
c->conn_config = ap_create_conn_config(ptrans);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
*after_point = APR_BRIGADE_FIRST(b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
APR_RING_UNSPLICE(e, f, link);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 132
^^^^^^^^^^^^^^^^^^^^^^^^
BRIGADE_NORMALIZE(ctx->b);
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 734
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_suspend_connection(cs->c, cs->r);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 888
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = r;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 879
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 888
^^^^^^^^^^^^^^^^^^^^^^^^
cs->r = r;
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1021
^^^^^^^^^^^^^^^^^^^^^^^^
ap_run_process_connection(c);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_core.c : 172
^^^^^^^^^^^^^^^^^^^^^^^^
cs->state = CONN_STATE_LINGER;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1078
^^^^^^^^^^^^^^^^^^^^^^^^
cs->pub.state = CONN_STATE_CHECK_REQUEST_LINE_READABLE;
------------------------


------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = now + apr_time_from_sec(ccfg->new_timeout);
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 396
^^^^^^^^^^^^^^^^^^^^^^^^
ccfg->timeout_at = 0;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/event.c : 1100
^^^^^^^^^^^^^^^^^^^^^^^^
TO_QUEUE_APPEND(cs->sc->ka_q, cs);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/event.c : 889
^^^^^^^^^^^^^^^^^^^^^^^^
cs->sc = ap_get_module_config(ap_server_conf->module_config,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 209
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->buffered = 0;
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 151
^^^^^^^^^^^^^^^^^^^^^^^^
if (thefile->buffered) {
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 204
^^^^^^^^^^^^^^^^^^^^^^^^
(*out) = (apr_file_t *)apr_pcalloc(pool_out, sizeof(apr_file_t));
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_file_putc(1, pollset->wakeup_pipe[1]);
------------------------
------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 145
^^^^^^^^^^^^^^^^^^^^^^^^
pollset->flags = flags;
------------------------
------------------------
 apr-1.6.3/poll/unix/pollset.c : 223
^^^^^^^^^^^^^^^^^^^^^^^^
if (pollset->flags & APR_POLLSET_WAKEABLE)
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 88
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_port_unknown = sock->local_interface_unknown = 0;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->ipaddr_ptr = &(*new)->local_addr->sa.sin6.sin6_addr;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_thread_mutex_unlock(queue_info->idlers_mutex);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1015
^^^^^^^^^^^^^^^^^^^^^^^^
if ((*pool->ref = pool->sibling) != NULL)
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 943
^^^^^^^^^^^^^^^^^^^^^^^^
while (pool->child)
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (rv != APR_SUCCESS) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1602
^^^^^^^^^^^^^^^^^^^^^^^^
for ( ; !TEST_CHAR(*ptr, T_HTTP_CTRLS); ++ptr) ;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1135
^^^^^^^^^^^^^^^^^^^^^^^^
pool->ref = &parent->child;
------------------------
------------------------
 apr-1.6.3/strings/apr_strings.c : 423
^^^^^^^^^^^^^^^^^^^^^^^^
*--start = '0' + (char)(n % 10);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1334
^^^^^^^^^^^^^^^^^^^^^^^^
if (!ctx->headers_sent && !check_headers(r)) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1306
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx = apr_pcalloc(r->pool, sizeof(header_filter_ctx));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1112
^^^^^^^^^^^^^^^^^^^^^^^^
pool->cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1306
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx = apr_pcalloc(r->pool, sizeof(header_filter_ctx));
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1113
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 72
^^^^^^^^^^^^^^^^^^^^^^^^
res->pool = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1108
^^^^^^^^^^^^^^^^^^^^^^^^
pool->allocator = allocator;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 73
^^^^^^^^^^^^^^^^^^^^^^^^
res->elt_size = elt_size;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1115
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 75
^^^^^^^^^^^^^^^^^^^^^^^^
res->nalloc = nelts;	/* ...but this many allocated */
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1110
^^^^^^^^^^^^^^^^^^^^^^^^
pool->abort_fn = abort_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 66
^^^^^^^^^^^^^^^^^^^^^^^^
res->elts = apr_pcalloc(p, nelts * elt_size);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1114
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 90
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->port = ntohs(sock->local_addr->sa.sin.sin_port);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 96
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------


------------------------
 httpd-2.4.28/server/core.c : 836
^^^^^^^^^^^^^^^^^^^^^^^^
&& reqconf->response_code_strings[error_index] != NULL) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2628
^^^^^^^^^^^^^^^^^^^^^^^^
*cref = c->next;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/modules/http/byterange_filter.c : 494
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_pass_brigade(f->next, bb);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1758
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_pass_brigade(f->next, b);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 465
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f->next;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1840
^^^^^^^^^^^^^^^^^^^^^^^^
for (f = r->output_filters; f != NULL; f = f->next) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 52
^^^^^^^^^^^^^^^^^^^^^^^^
apr_pool_cleanup_kill(b->p, b, brigade_cleanup);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 197
^^^^^^^^^^^^^^^^^^^^^^^^
for (bkt = APR_BRIGADE_FIRST(bb);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 330
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(bbOut, e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 925
^^^^^^^^^^^^^^^^^^^^^^^^
return (memcmp(method, "BASELINE-CONTROL", 16) == 0
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 925
^^^^^^^^^^^^^^^^^^^^^^^^
return (memcmp(method, "BASELINE-CONTROL", 16) == 0
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 925
^^^^^^^^^^^^^^^^^^^^^^^^
return (memcmp(method, "BASELINE-CONTROL", 16) == 0
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 httpd-2.4.28/modules/http/http_protocol.c : 925
^^^^^^^^^^^^^^^^^^^^^^^^
return (memcmp(method, "BASELINE-CONTROL", 16) == 0
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 683
^^^^^^^^^^^^^^^^^^^^^^^^
else if (strict && ll[0] && apr_isspace(ll[1])
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 694
^^^^^^^^^^^^^^^^^^^^^^^^
*ll = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 762
^^^^^^^^^^^^^^^^^^^^^^^^
while ((uri_delims[*(unsigned char *)s] & NOTEND_PATH) == 0) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/uri/apr_uri.c : 768
^^^^^^^^^^^^^^^^^^^^^^^^
if (*s == 0) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 725
^^^^^^^^^^^^^^^^^^^^^^^^
*ll = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 761
^^^^^^^^^^^^^^^^^^^^^^^^
&& r->protocol[0] == 'H' && r->protocol[1] == 'T'
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 760
^^^^^^^^^^^^^^^^^^^^^^^^
if (len == 8
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 760
^^^^^^^^^^^^^^^^^^^^^^^^
if (len == 8
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1929
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what & 0xf];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 760
^^^^^^^^^^^^^^^^^^^^^^^^
if (len == 8
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 760
^^^^^^^^^^^^^^^^^^^^^^^^
if (len == 8
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 767
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_num = HTTP_VERSION(r->protocol[5] - '0', r->protocol[7] - '0');
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 767
^^^^^^^^^^^^^^^^^^^^^^^^
r->proto_num = HTTP_VERSION(r->protocol[5] - '0', r->protocol[7] - '0');
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2111
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = '\\';
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 738
^^^^^^^^^^^^^^^^^^^^^^^^
if (*ll && !apr_isspace(*ll)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 751
^^^^^^^^^^^^^^^^^^^^^^^^
*((char *)r->protocol + len) = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1927
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = prefix;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 327
^^^^^^^^^^^^^^^^^^^^^^^^
if (last_char && (*last_char == APR_ASCII_LF)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2109
^^^^^^^^^^^^^^^^^^^^^^^^
for (; *s; ++s) {
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 324
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = *outf;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1883
^^^^^^^^^^^^^^^^^^^^^^^^
if (ctx->bb == NULL) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1884
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->bb = apr_brigade_create(r->pool, c->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1848
^^^^^^^^^^^^^^^^^^^^^^^^
ctx->tmpbb = apr_brigade_create(r->pool, r->connection->bucket_alloc);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1868
^^^^^^^^^^^^^^^^^^^^^^^^
ctx = f->ctx;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1887
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_fwrite(f->next, ctx->bb, str, len);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 569
^^^^^^^^^^^^^^^^^^^^^^^^
if ((e = APR_BRIGADE_LAST(bb)) && APR_BUCKET_IS_EOS(e) && next->r) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 442
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(b) && APR_BUCKET_IS_HEAP(e)
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 472
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_TAIL(b, e);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 470
^^^^^^^^^^^^^^^^^^^^^^^^
e = apr_bucket_heap_create(buf, APR_BUCKET_BUFF_SIZE,
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2629
^^^^^^^^^^^^^^^^^^^^^^^^
(*c->plain_cleanup_fn)((void *)c->data);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_heap.c : 83
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 39
^^^^^^^^^^^^^^^^^^^^^^^^
a->length  = point;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 33
^^^^^^^^^^^^^^^^^^^^^^^^
if (point > a->length) {
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 40
^^^^^^^^^^^^^^^^^^^^^^^^
b->length -= point;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 23
^^^^^^^^^^^^^^^^^^^^^^^^
**b = *a;
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_simple.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
b->start  += point;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
if (!TABLE_INDEX_IS_INITIALIZED(t, hash)) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 467
^^^^^^^^^^^^^^^^^^^^^^^^
t->a.nelts = 0;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 741
^^^^^^^^^^^^^^^^^^^^^^^^
if ((t_seconds != cached_time->t) ||
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
if (!TABLE_INDEX_IS_INITIALIZED(t, hash)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 468
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_initialized = 0;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 2138
^^^^^^^^^^^^^^^^^^^^^^^^
*d++ = *s;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 483
^^^^^^^^^^^^^^^^^^^^^^^^
if (!TABLE_INDEX_IS_INITIALIZED(t, hash)) {
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 585
^^^^^^^^^^^^^^^^^^^^^^^^
TABLE_SET_INDEX_INITIALIZED(t, hash);
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1928
^^^^^^^^^^^^^^^^^^^^^^^^
*where++ = c2x_table[what >> 4];
------------------------


------------------------
 apr-1.6.3/file_io/unix/pipe.c : 206
^^^^^^^^^^^^^^^^^^^^^^^^
(*out)->filedes = filedes[1];
------------------------
------------------------
 apr-1.6.3/file_io/unix/readwrite.c : 188
^^^^^^^^^^^^^^^^^^^^^^^^
rv = write(thefile->filedes, buf, *nbytes);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 198
^^^^^^^^^^^^^^^^^^^^^^^^
if (queue_info->terminated) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 303
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->terminated = 1;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 42
^^^^^^^^^^^^^^^^^^^^^^^^
while (!APR_BRIGADE_EMPTY(b)) {
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1167
^^^^^^^^^^^^^^^^^^^^^^^^
strs[i] = process_item(r, orig, &items[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 226
^^^^^^^^^^^^^^^^^^^^^^^^
if (node->size == SMALL_NODE_SIZE) {
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 224
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_alloc_t *list = node->alloc;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 232
^^^^^^^^^^^^^^^^^^^^^^^^
apr_allocator_free(list->allocator, node->memnode);
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1171
^^^^^^^^^^^^^^^^^^^^^^^^
len += strl[i] = strlen(strs[i]);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2556
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->free_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2625
^^^^^^^^^^^^^^^^^^^^^^^^
cleanup_t *c = *cref;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 208
^^^^^^^^^^^^^^^^^^^^^^^^
return (shutdown(thesocket->socketdes, how) == -1) ? errno : APR_SUCCESS;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 338
^^^^^^^^^^^^^^^^^^^^^^^^
apr_set_option(*new, APR_TCP_NODELAY, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 106
^^^^^^^^^^^^^^^^^^^^^^^^
sock->options &= ~APR_INCOMPLETE_READ;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 489
^^^^^^^^^^^^^^^^^^^^^^^^
next = APR_BUCKET_NEXT(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 41
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BUCKET_INIT(b);
------------------------
------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------


------------------------
 httpd-2.4.28/modules/http/http_request.c : 356
^^^^^^^^^^^^^^^^^^^^^^^^
APR_BRIGADE_INSERT_HEAD(bb, b);
------------------------
------------------------
 httpd-2.4.28/server/core_filters.c : 720
^^^^^^^^^^^^^^^^^^^^^^^^
apr_bucket_delete(bucket);
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_flush.c : 32
^^^^^^^^^^^^^^^^^^^^^^^^
b->type        = &apr_bucket_type_flush;
------------------------
------------------------
 httpd-2.4.28/modules/filters/mod_reqtimeout.c : 346
^^^^^^^^^^^^^^^^^^^^^^^^
if (!APR_BRIGADE_EMPTY(bb) && AP_BUCKET_IS_EOR(APR_BRIGADE_LAST(bb))) {
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 275
^^^^^^^^^^^^^^^^^^^^^^^^
*recycled_pool = first_pool->pool;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 964
^^^^^^^^^^^^^^^^^^^^^^^^
active->first_avail = pool->self_first_avail;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 954
^^^^^^^^^^^^^^^^^^^^^^^^
free_proc_chain(pool->subprocesses);
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 httpd-2.4.28/modules/loggers/mod_log_config.c : 1197
^^^^^^^^^^^^^^^^^^^^^^^^
ap_set_module_config(r->request_config, &log_config_module, state);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 62
^^^^^^^^^^^^^^^^^^^^^^^^
b->p = p;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_brigade.c : 63
^^^^^^^^^^^^^^^^^^^^^^^^
b->bucket_alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 456
^^^^^^^^^^^^^^^^^^^^^^^^
hash = TABLE_HASH(next_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2497
^^^^^^^^^^^^^^^^^^^^^^^^
c->data = data;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1134
^^^^^^^^^^^^^^^^^^^^^^^^
while (*value == ' ' || *value == '\t') {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2499
^^^^^^^^^^^^^^^^^^^^^^^^
c->child_cleanup_fn = child_cleanup_fn;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 327
^^^^^^^^^^^^^^^^^^^^^^^^
if (last_char && (*last_char == APR_ASCII_LF)) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 456
^^^^^^^^^^^^^^^^^^^^^^^^
hash = TABLE_HASH(next_elt->key);
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 353
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1134
^^^^^^^^^^^^^^^^^^^^^^^^
while (*value == ' ' || *value == '\t') {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1672
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx = apr_palloc(r->pool, sizeof(*ctx));
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 988
^^^^^^^^^^^^^^^^^^^^^^^^
if (*field == '\t' || *field == ' ') {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 353
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1758
^^^^^^^^^^^^^^^^^^^^^^^^
return ap_pass_brigade(f->next, b);
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 344
^^^^^^^^^^^^^^^^^^^^^^^^
*last_char = '\0';
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 344
^^^^^^^^^^^^^^^^^^^^^^^^
*last_char = '\0';
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 353
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1140
^^^^^^^^^^^^^^^^^^^^^^^^
if (((*sort_next)->key_checksum == (*last)->key_checksum) &&
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start++];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1664
^^^^^^^^^^^^^^^^^^^^^^^^
request_rec *r = f->r;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start++];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1140
^^^^^^^^^^^^^^^^^^^^^^^^
if (((*sort_next)->key_checksum == (*last)->key_checksum) &&
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1068
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start++];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1140
^^^^^^^^^^^^^^^^^^^^^^^^
if (((*sort_next)->key_checksum == (*last)->key_checksum) &&
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start++];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1071
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start++];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1140
^^^^^^^^^^^^^^^^^^^^^^^^
if (((*sort_next)->key_checksum == (*last)->key_checksum) &&
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1068
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start++];
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1297
^^^^^^^^^^^^^^^^^^^^^^^^
header_filter_ctx *ctx = f->ctx;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1068
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start++];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1140
^^^^^^^^^^^^^^^^^^^^^^^^
if (((*sort_next)->key_checksum == (*last)->key_checksum) &&
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 353
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1062
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1840
^^^^^^^^^^^^^^^^^^^^^^^^
for (f = r->output_filters; f != NULL; f = f->next) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1062
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 353
^^^^^^^^^^^^^^^^^^^^^^^^
fscan->next = f;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1080
^^^^^^^^^^^^^^^^^^^^^^^^
values_tmp[i] = values[i];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1062
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start];
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1290
^^^^^^^^^^^^^^^^^^^^^^^^
request_rec *r = f->r;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1062
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1066
^^^^^^^^^^^^^^^^^^^^^^^^
if (strcasecmp(values[block1_start]->key,
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1068
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start++];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 479
^^^^^^^^^^^^^^^^^^^^^^^^
&f->c->output_filters);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1066
^^^^^^^^^^^^^^^^^^^^^^^^
if (strcasecmp(values[block1_start]->key,
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1068
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start++];
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1841
^^^^^^^^^^^^^^^^^^^^^^^^
if (ap_old_write_func == f->frec)
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1068
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block2_start++];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 316
^^^^^^^^^^^^^^^^^^^^^^^^
f->frec = frec;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1062
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 317
^^^^^^^^^^^^^^^^^^^^^^^^
f->ctx = ctx;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1062
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start];
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1848
^^^^^^^^^^^^^^^^^^^^^^^^
outerror_filter_ctx_t *ctx = (outerror_filter_ctx_t *)(f->ctx);
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1062
^^^^^^^^^^^^^^^^^^^^^^^^
*dst++ = values[block1_start];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 352
^^^^^^^^^^^^^^^^^^^^^^^^
f->next = fscan->next;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1067
^^^^^^^^^^^^^^^^^^^^^^^^
values[block2_start]->key) > 0) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 319
^^^^^^^^^^^^^^^^^^^^^^^^
f->r = frec->ftype < AP_FTYPE_CONNECTION ? r : NULL;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1080
^^^^^^^^^^^^^^^^^^^^^^^^
values_tmp[i] = values[i];
------------------------
------------------------
 httpd-2.4.28/modules/http/http_filters.c : 1847
^^^^^^^^^^^^^^^^^^^^^^^^
request_rec *r = f->r;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1067
^^^^^^^^^^^^^^^^^^^^^^^^
values[block2_start]->key) > 0) {
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 1080
^^^^^^^^^^^^^^^^^^^^^^^^
values_tmp[i] = values[i];
------------------------
------------------------
 httpd-2.4.28/server/util_filter.c : 320
^^^^^^^^^^^^^^^^^^^^^^^^
f->c = c;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1123
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->parent = parent) != NULL) {
------------------------
------------------------
 apr-1.6.3/tables/apr_tables.c : 456
^^^^^^^^^^^^^^^^^^^^^^^^
hash = TABLE_HASH(next_elt->key);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1111
^^^^^^^^^^^^^^^^^^^^^^^^
pool->child = NULL;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 1131
^^^^^^^^^^^^^^^^^^^^^^^^
if ((pool->sibling = parent->child) != NULL)
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2493
^^^^^^^^^^^^^^^^^^^^^^^^
p->free_cleanups = c->next;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 766
^^^^^^^^^^^^^^^^^^^^^^^^
r->assbackwards = 0;
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 722
^^^^^^^^^^^^^^^^^^^^^^^^
for (r->protocol = ll; apr_isspace(*r->protocol); ++r->protocol)
------------------------


------------------------
 httpd-2.4.28/server/protocol.c : 1367
^^^^^^^^^^^^^^^^^^^^^^^^
r->per_dir_config = r->server->lookup_defaults;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 637
^^^^^^^^^^^^^^^^^^^^^^^^
t->index_last[hash] = t->a.nelts;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 785
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key = (char *)key;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 786
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->val = (char *)val;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 787
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key_checksum = checksum;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 639
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key = (char *)key;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 640
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->val = (char *)val;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 641
^^^^^^^^^^^^^^^^^^^^^^^^
next_elt->key_checksum = checksum;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 453
^^^^^^^^^^^^^^^^^^^^^^^^
if (strlen(*s) < bytes_handled) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 955
^^^^^^^^^^^^^^^^^^^^^^^^
pool->subprocesses = NULL;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/atomic/unix/builtins.c : 48
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_fetch_and_add(mem, 1);
------------------------
------------------------
 apr-1.6.3/atomic/unix/builtins.c : 53
^^^^^^^^^^^^^^^^^^^^^^^^
return __sync_sub_and_fetch(mem, 1);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 302
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->sa = sa.sa;
------------------------


------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 205
^^^^^^^^^^^^^^^^^^^^^^^^
thd->exitval = retval;
------------------------
------------------------
 apr-1.6.3/threadproc/unix/thread.c : 218
^^^^^^^^^^^^^^^^^^^^^^^^
*retval = thd->exitval;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 958
^^^^^^^^^^^^^^^^^^^^^^^^
pool->user_data = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2490
^^^^^^^^^^^^^^^^^^^^^^^^
if (p->free_cleanups) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 86
^^^^^^^^^^^^^^^^^^^^^^^^
if (t >= 0 && sock->timeout < 0) {
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 295
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->timeout = -1;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockopt.c : 108
^^^^^^^^^^^^^^^^^^^^^^^^
sock->timeout = t;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 101
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr->pool = p;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 44
^^^^^^^^^^^^^^^^^^^^^^^^
if (thesocket->bound && thesocket->local_addr->family == APR_UNIX) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 94
^^^^^^^^^^^^^^^^^^^^^^^^
*new = (apr_socket_t *)apr_pcalloc(p, sizeof(apr_socket_t));
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 137
^^^^^^^^^^^^^^^^^^^^^^^^
*addr = apr_palloc(sockaddr->pool, sockaddr->addr_str_len);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 311
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_addr->pool = connection_context;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 185
^^^^^^^^^^^^^^^^^^^^^^^^
if (sock->local_interface_unknown || sock->local_port_unknown) {
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 357
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->local_interface_unknown = 1;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2498
^^^^^^^^^^^^^^^^^^^^^^^^
c->plain_cleanup_fn = plain_cleanup_fn;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2553
^^^^^^^^^^^^^^^^^^^^^^^^
if (c->data == data && c->plain_cleanup_fn == cleanup_fn) {
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2554
^^^^^^^^^^^^^^^^^^^^^^^^
*lastp = c->next;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 119
^^^^^^^^^^^^^^^^^^^^^^^^
&& IN6_IS_ADDR_V4MAPPED((struct in6_addr *)sockaddr->ipaddr_ptr)
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2500
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 213
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_pool_cleanup_run(thesocket->pool, thesocket, socket_cleanup);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 95
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->pool = p;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------
------------------------
 httpd-2.4.28/server/scoreboard.c : 523
^^^^^^^^^^^^^^^^^^^^^^^^
apr_snprintf(ws->vhost, sizeof(ws->vhost), "%s:%d",
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockets.c : 299
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->socketdes = s;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 59
^^^^^^^^^^^^^^^^^^^^^^^^
thesocket->socketdes = sd;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 82
^^^^^^^^^^^^^^^^^^^^^^^^
sock->local_addr->salen = sizeof(sock->local_addr->sa);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 305
^^^^^^^^^^^^^^^^^^^^^^^^
*(*new)->local_addr = *sock->local_addr;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 237
^^^^^^^^^^^^^^^^^^^^^^^^
new_recycle->pool = pool_to_recycle;
------------------------


------------------------
 apr-1.6.3/tables/apr_tables.c : 836
^^^^^^^^^^^^^^^^^^^^^^^^
COMPUTE_KEY_CHECKSUM(key, checksum);
------------------------
------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 196
^^^^^^^^^^^^^^^^^^^^^^^^
node->size = size;
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 194
^^^^^^^^^^^^^^^^^^^^^^^^
node->alloc = list;
------------------------
------------------------
 httpd-2.4.28/server/protocol.c : 1134
^^^^^^^^^^^^^^^^^^^^^^^^
while (*value == ' ' || *value == '\t') {
------------------------


------------------------
 apr-util-1.6.1/buckets/apr_buckets_alloc.c : 195
^^^^^^^^^^^^^^^^^^^^^^^^
node->memnode = memnode;
------------------------
------------------------
 httpd-2.4.28/server/util.c : 1602
^^^^^^^^^^^^^^^^^^^^^^^^
for ( ; !TEST_CHAR(*ptr, T_HTTP_CTRLS); ++ptr) ;
------------------------


------------------------
 apr-1.6.3/locks/unix/thread_mutex.c : 84
^^^^^^^^^^^^^^^^^^^^^^^^
*mutex = new_mutex;
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 497
^^^^^^^^^^^^^^^^^^^^^^^^
if ((rv = apr_thread_mutex_lock(queue->one_big_mutex)) != APR_SUCCESS) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 227
^^^^^^^^^^^^^^^^^^^^^^^^
if (cnt >= queue_info->max_recycled_pools) {
------------------------
------------------------
 httpd-2.4.28/server/mpm/event/fdqueue.c : 287
^^^^^^^^^^^^^^^^^^^^^^^^
queue_info->max_recycled_pools = 0;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 838
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 118
^^^^^^^^^^^^^^^^^^^^^^^^
if (sockaddr->family == AF_INET6
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 143
^^^^^^^^^^^^^^^^^^^^^^^^
addr->family = family;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 963
^^^^^^^^^^^^^^^^^^^^^^^^
active = pool->active = pool->self;
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2524
^^^^^^^^^^^^^^^^^^^^^^^^
c->next = p->pre_cleanups;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 138
^^^^^^^^^^^^^^^^^^^^^^^^
return apr_sockaddr_ip_getbuf(*addr, sockaddr->addr_str_len, sockaddr);
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockets.c : 99
^^^^^^^^^^^^^^^^^^^^^^^^
(*new)->remote_addr = (apr_sockaddr_t *)apr_pcalloc((*new)->pool,
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2525
^^^^^^^^^^^^^^^^^^^^^^^^
p->pre_cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 937
^^^^^^^^^^^^^^^^^^^^^^^^
pool->pre_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/network_io/unix/sockaddr.c : 167
^^^^^^^^^^^^^^^^^^^^^^^^
addr->ipaddr_len = sizeof(struct in6_addr);
------------------------
------------------------
 httpd-2.4.28/server/vhost.c : 348
^^^^^^^^^^^^^^^^^^^^^^^^
key = *(unsigned *)((char *)sa->ipaddr_ptr + sa->ipaddr_len - 4);
------------------------


------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 951
^^^^^^^^^^^^^^^^^^^^^^^^
pool->free_cleanups = NULL;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2501
^^^^^^^^^^^^^^^^^^^^^^^^
p->cleanups = c;
------------------------
------------------------
 apr-1.6.3/memory/unix/apr_pools.c : 2630
^^^^^^^^^^^^^^^^^^^^^^^^
c = *cref;
------------------------


